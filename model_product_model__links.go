/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the ProductModelLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductModelLinks{}

// ProductModelLinks Links to additional related resources.
type ProductModelLinks struct {
	Self *ConfigModelLinksSelf `json:"self,omitempty"`
	Configs *ConfigModelLinksSelf `json:"configs,omitempty"`
	Environments *ConfigModelLinksSelf `json:"environments,omitempty"`
	Tags *ConfigModelLinksSelf `json:"tags,omitempty"`
	PermissionGroups *ConfigModelLinksSelf `json:"permission-groups,omitempty"`
	Members *ConfigModelLinksSelf `json:"members,omitempty"`
	Invitations *ConfigModelLinksSelf `json:"invitations,omitempty"`
	Segments *ConfigModelLinksSelf `json:"segments,omitempty"`
	Preferences *ConfigModelLinksSelf `json:"preferences,omitempty"`
	Webhooks *ConfigModelLinksSelf `json:"webhooks,omitempty"`
}

// NewProductModelLinks instantiates a new ProductModelLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductModelLinks() *ProductModelLinks {
	this := ProductModelLinks{}
	return &this
}

// NewProductModelLinksWithDefaults instantiates a new ProductModelLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductModelLinksWithDefaults() *ProductModelLinks {
	this := ProductModelLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ProductModelLinks) GetSelf() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Self) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetSelfOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ProductModelLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given ConfigModelLinksSelf and assigns it to the Self field.
func (o *ProductModelLinks) SetSelf(v ConfigModelLinksSelf) {
	o.Self = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *ProductModelLinks) GetConfigs() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Configs) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetConfigsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *ProductModelLinks) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given ConfigModelLinksSelf and assigns it to the Configs field.
func (o *ProductModelLinks) SetConfigs(v ConfigModelLinksSelf) {
	o.Configs = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *ProductModelLinks) GetEnvironments() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Environments) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetEnvironmentsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *ProductModelLinks) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given ConfigModelLinksSelf and assigns it to the Environments field.
func (o *ProductModelLinks) SetEnvironments(v ConfigModelLinksSelf) {
	o.Environments = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProductModelLinks) GetTags() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Tags) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetTagsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProductModelLinks) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given ConfigModelLinksSelf and assigns it to the Tags field.
func (o *ProductModelLinks) SetTags(v ConfigModelLinksSelf) {
	o.Tags = &v
}

// GetPermissionGroups returns the PermissionGroups field value if set, zero value otherwise.
func (o *ProductModelLinks) GetPermissionGroups() ConfigModelLinksSelf {
	if o == nil || IsNil(o.PermissionGroups) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.PermissionGroups
}

// GetPermissionGroupsOk returns a tuple with the PermissionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetPermissionGroupsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.PermissionGroups) {
		return nil, false
	}
	return o.PermissionGroups, true
}

// HasPermissionGroups returns a boolean if a field has been set.
func (o *ProductModelLinks) HasPermissionGroups() bool {
	if o != nil && !IsNil(o.PermissionGroups) {
		return true
	}

	return false
}

// SetPermissionGroups gets a reference to the given ConfigModelLinksSelf and assigns it to the PermissionGroups field.
func (o *ProductModelLinks) SetPermissionGroups(v ConfigModelLinksSelf) {
	o.PermissionGroups = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ProductModelLinks) GetMembers() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Members) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetMembersOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ProductModelLinks) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given ConfigModelLinksSelf and assigns it to the Members field.
func (o *ProductModelLinks) SetMembers(v ConfigModelLinksSelf) {
	o.Members = &v
}

// GetInvitations returns the Invitations field value if set, zero value otherwise.
func (o *ProductModelLinks) GetInvitations() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Invitations) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Invitations
}

// GetInvitationsOk returns a tuple with the Invitations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetInvitationsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Invitations) {
		return nil, false
	}
	return o.Invitations, true
}

// HasInvitations returns a boolean if a field has been set.
func (o *ProductModelLinks) HasInvitations() bool {
	if o != nil && !IsNil(o.Invitations) {
		return true
	}

	return false
}

// SetInvitations gets a reference to the given ConfigModelLinksSelf and assigns it to the Invitations field.
func (o *ProductModelLinks) SetInvitations(v ConfigModelLinksSelf) {
	o.Invitations = &v
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *ProductModelLinks) GetSegments() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Segments) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetSegmentsOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Segments) {
		return nil, false
	}
	return o.Segments, true
}

// HasSegments returns a boolean if a field has been set.
func (o *ProductModelLinks) HasSegments() bool {
	if o != nil && !IsNil(o.Segments) {
		return true
	}

	return false
}

// SetSegments gets a reference to the given ConfigModelLinksSelf and assigns it to the Segments field.
func (o *ProductModelLinks) SetSegments(v ConfigModelLinksSelf) {
	o.Segments = &v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *ProductModelLinks) GetPreferences() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Preferences) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetPreferencesOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *ProductModelLinks) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given ConfigModelLinksSelf and assigns it to the Preferences field.
func (o *ProductModelLinks) SetPreferences(v ConfigModelLinksSelf) {
	o.Preferences = &v
}

// GetWebhooks returns the Webhooks field value if set, zero value otherwise.
func (o *ProductModelLinks) GetWebhooks() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Webhooks) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductModelLinks) GetWebhooksOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Webhooks) {
		return nil, false
	}
	return o.Webhooks, true
}

// HasWebhooks returns a boolean if a field has been set.
func (o *ProductModelLinks) HasWebhooks() bool {
	if o != nil && !IsNil(o.Webhooks) {
		return true
	}

	return false
}

// SetWebhooks gets a reference to the given ConfigModelLinksSelf and assigns it to the Webhooks field.
func (o *ProductModelLinks) SetWebhooks(v ConfigModelLinksSelf) {
	o.Webhooks = &v
}

func (o ProductModelLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductModelLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.PermissionGroups) {
		toSerialize["permission-groups"] = o.PermissionGroups
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.Invitations) {
		toSerialize["invitations"] = o.Invitations
	}
	if !IsNil(o.Segments) {
		toSerialize["segments"] = o.Segments
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.Webhooks) {
		toSerialize["webhooks"] = o.Webhooks
	}
	return toSerialize, nil
}

type NullableProductModelLinks struct {
	value *ProductModelLinks
	isSet bool
}

func (v NullableProductModelLinks) Get() *ProductModelLinks {
	return v.value
}

func (v *NullableProductModelLinks) Set(val *ProductModelLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableProductModelLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableProductModelLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductModelLinks(val *ProductModelLinks) *NullableProductModelLinks {
	return &NullableProductModelLinks{value: val, isSet: true}
}

func (v NullableProductModelLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductModelLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


