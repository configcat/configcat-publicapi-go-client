/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format.   **Important:** Do not use this API for accessing and evaluating feature flag values. Use the [SDKs](https://configcat.com/docs/sdk-reference/overview) or the [ConfigCat Proxy](https://configcat.com/docs/advanced/proxy/proxy-overview/) instead.  # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the SdkKeysModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SdkKeysModel{}

// SdkKeysModel struct for SdkKeysModel
type SdkKeysModel struct {
	// The primary SDK key.
	Primary NullableString `json:"primary,omitempty"`
	// The secondary SDK key.
	Secondary NullableString `json:"secondary,omitempty"`
}

// NewSdkKeysModel instantiates a new SdkKeysModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSdkKeysModel() *SdkKeysModel {
	this := SdkKeysModel{}
	return &this
}

// NewSdkKeysModelWithDefaults instantiates a new SdkKeysModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSdkKeysModelWithDefaults() *SdkKeysModel {
	this := SdkKeysModel{}
	return &this
}

// GetPrimary returns the Primary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkKeysModel) GetPrimary() string {
	if o == nil || IsNil(o.Primary.Get()) {
		var ret string
		return ret
	}
	return *o.Primary.Get()
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkKeysModel) GetPrimaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Primary.Get(), o.Primary.IsSet()
}

// HasPrimary returns a boolean if a field has been set.
func (o *SdkKeysModel) HasPrimary() bool {
	if o != nil && o.Primary.IsSet() {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given NullableString and assigns it to the Primary field.
func (o *SdkKeysModel) SetPrimary(v string) {
	o.Primary.Set(&v)
}
// SetPrimaryNil sets the value for Primary to be an explicit nil
func (o *SdkKeysModel) SetPrimaryNil() {
	o.Primary.Set(nil)
}

// UnsetPrimary ensures that no value is present for Primary, not even an explicit nil
func (o *SdkKeysModel) UnsetPrimary() {
	o.Primary.Unset()
}

// GetSecondary returns the Secondary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SdkKeysModel) GetSecondary() string {
	if o == nil || IsNil(o.Secondary.Get()) {
		var ret string
		return ret
	}
	return *o.Secondary.Get()
}

// GetSecondaryOk returns a tuple with the Secondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SdkKeysModel) GetSecondaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secondary.Get(), o.Secondary.IsSet()
}

// HasSecondary returns a boolean if a field has been set.
func (o *SdkKeysModel) HasSecondary() bool {
	if o != nil && o.Secondary.IsSet() {
		return true
	}

	return false
}

// SetSecondary gets a reference to the given NullableString and assigns it to the Secondary field.
func (o *SdkKeysModel) SetSecondary(v string) {
	o.Secondary.Set(&v)
}
// SetSecondaryNil sets the value for Secondary to be an explicit nil
func (o *SdkKeysModel) SetSecondaryNil() {
	o.Secondary.Set(nil)
}

// UnsetSecondary ensures that no value is present for Secondary, not even an explicit nil
func (o *SdkKeysModel) UnsetSecondary() {
	o.Secondary.Unset()
}

func (o SdkKeysModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SdkKeysModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Primary.IsSet() {
		toSerialize["primary"] = o.Primary.Get()
	}
	if o.Secondary.IsSet() {
		toSerialize["secondary"] = o.Secondary.Get()
	}
	return toSerialize, nil
}

type NullableSdkKeysModel struct {
	value *SdkKeysModel
	isSet bool
}

func (v NullableSdkKeysModel) Get() *SdkKeysModel {
	return v.value
}

func (v *NullableSdkKeysModel) Set(val *SdkKeysModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSdkKeysModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSdkKeysModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSdkKeysModel(val *SdkKeysModel) *NullableSdkKeysModel {
	return &NullableSdkKeysModel{value: val, isSet: true}
}

func (v NullableSdkKeysModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSdkKeysModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


