/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format.   **Important:** Do not use this API for accessing and evaluating feature flag values. Use the [SDKs](https://configcat.com/docs/sdk-reference/overview) or the [ConfigCat Proxy](https://configcat.com/docs/advanced/proxy/proxy-overview/) instead.  # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the OrganizationMembersModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationMembersModel{}

// OrganizationMembersModel struct for OrganizationMembersModel
type OrganizationMembersModel struct {
	// List of Organization Admins.
	Admins []OrganizationAdminModel `json:"admins,omitempty"`
	// List of Billing Managers.
	BillingManagers []OrganizationAdminModel `json:"billingManagers,omitempty"`
	// List of Organization Members.
	Members []OrganizationMemberModel `json:"members,omitempty"`
}

// NewOrganizationMembersModel instantiates a new OrganizationMembersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationMembersModel() *OrganizationMembersModel {
	this := OrganizationMembersModel{}
	return &this
}

// NewOrganizationMembersModelWithDefaults instantiates a new OrganizationMembersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationMembersModelWithDefaults() *OrganizationMembersModel {
	this := OrganizationMembersModel{}
	return &this
}

// GetAdmins returns the Admins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationMembersModel) GetAdmins() []OrganizationAdminModel {
	if o == nil {
		var ret []OrganizationAdminModel
		return ret
	}
	return o.Admins
}

// GetAdminsOk returns a tuple with the Admins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationMembersModel) GetAdminsOk() ([]OrganizationAdminModel, bool) {
	if o == nil || IsNil(o.Admins) {
		return nil, false
	}
	return o.Admins, true
}

// HasAdmins returns a boolean if a field has been set.
func (o *OrganizationMembersModel) HasAdmins() bool {
	if o != nil && IsNil(o.Admins) {
		return true
	}

	return false
}

// SetAdmins gets a reference to the given []OrganizationAdminModel and assigns it to the Admins field.
func (o *OrganizationMembersModel) SetAdmins(v []OrganizationAdminModel) {
	o.Admins = v
}

// GetBillingManagers returns the BillingManagers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationMembersModel) GetBillingManagers() []OrganizationAdminModel {
	if o == nil {
		var ret []OrganizationAdminModel
		return ret
	}
	return o.BillingManagers
}

// GetBillingManagersOk returns a tuple with the BillingManagers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationMembersModel) GetBillingManagersOk() ([]OrganizationAdminModel, bool) {
	if o == nil || IsNil(o.BillingManagers) {
		return nil, false
	}
	return o.BillingManagers, true
}

// HasBillingManagers returns a boolean if a field has been set.
func (o *OrganizationMembersModel) HasBillingManagers() bool {
	if o != nil && IsNil(o.BillingManagers) {
		return true
	}

	return false
}

// SetBillingManagers gets a reference to the given []OrganizationAdminModel and assigns it to the BillingManagers field.
func (o *OrganizationMembersModel) SetBillingManagers(v []OrganizationAdminModel) {
	o.BillingManagers = v
}

// GetMembers returns the Members field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationMembersModel) GetMembers() []OrganizationMemberModel {
	if o == nil {
		var ret []OrganizationMemberModel
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationMembersModel) GetMembersOk() ([]OrganizationMemberModel, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *OrganizationMembersModel) HasMembers() bool {
	if o != nil && IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []OrganizationMemberModel and assigns it to the Members field.
func (o *OrganizationMembersModel) SetMembers(v []OrganizationMemberModel) {
	o.Members = v
}

func (o OrganizationMembersModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationMembersModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Admins != nil {
		toSerialize["admins"] = o.Admins
	}
	if o.BillingManagers != nil {
		toSerialize["billingManagers"] = o.BillingManagers
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

type NullableOrganizationMembersModel struct {
	value *OrganizationMembersModel
	isSet bool
}

func (v NullableOrganizationMembersModel) Get() *OrganizationMembersModel {
	return v.value
}

func (v *NullableOrganizationMembersModel) Set(val *OrganizationMembersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationMembersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationMembersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationMembersModel(val *OrganizationMembersModel) *NullableOrganizationMembersModel {
	return &NullableOrganizationMembersModel{value: val, isSet: true}
}

func (v NullableOrganizationMembersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationMembersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


