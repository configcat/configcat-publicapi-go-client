openapi: 3.0.1
info:
  title: ConfigCat Public Management API
  description: "**Base API URL**: https://api.configcat.com\n\nIf you prefer the swagger\
    \ documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).\n\
    \nThe purpose of this API is to access the ConfigCat platform programmatically.\
    \ \nYou can **Create**, **Read**, **Update** and **Delete** any entities like\
    \ **Feature Flags, Configs, Environments** or **Products** within ConfigCat. \n\
    \nThe API is based on HTTP REST, uses resource-oriented URLs, status codes and\
    \ supports JSON \nand JSON+HAL format. Do not use this API for accessing and evaluating\
    \ feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).\n\
    \n\n# OpenAPI Specification\n\nThe complete specification is publicly available\
    \ here: [swagger.json](v1/swagger.json). \nYou can use it to generate client libraries\
    \ in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator)\
    \ or\n[Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact\
    \ with this API.\n\n# Authentication\nThis API uses the [Basic HTTP Authentication\
    \ Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication). \n\n<!--\
    \ ReDoc-Inject: <security-definitions> -->\n\n# Throttling and rate limits\nAll\
    \ the rate limited API calls are returning information about the current rate\
    \ limit period in the following HTTP headers:\n\n| Header | Description |\n| :-\
    \ | :- |\n| X-Rate-Limit-Remaining | The maximum number of requests remaining\
    \ in the current rate limit period. |\n| X-Rate-Limit-Reset     | The time\twhen\
    \ the current rate limit period resets.\t\t\t\t\t\t  |\n\nWhen the rate limit\
    \ is exceeded by a request, the API returns with a `HTTP 429 - Too many requests`\
    \ status along with a `Retry-After` HTTP header.\n"
  termsOfService: https://configcat.com/termsofserviceagreement
  contact:
    name: ConfigCat
    url: https://configcat.com
    email: support@configcat.com
  version: v1
  x-logo:
    url: https://api.configcat.com/resources/configcat-logo-horiz.svg
servers:
- url: https://api.configcat.com
security:
- Basic: []
tags:
- name: Feature Flag & Setting values using SDK Key
  description: "With these endpoints you can control how your existing Feature Flags\
    \ and Settings should serve their values. \nYou can turn Feature Flags on or off,\
    \ update Setting values and also add, remove or change the order of Percentage\
    \ and Targeting Rules.\n\nThese endpoints are determining the Environment and\
    \ Config by the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.configcat.com/sdkkey\"\
    >SDK key</a> passed in\nthe `X-CONFIGCAT-SDKKEY` request header. To identify the\
    \ desired Feature Flag or Setting to change, \nyou can use either its `settingId`\
    \ or `key` attribute. You can get those attributes \nfrom the [Feature Flag &\
    \ Setting](#tag/Feature-Flags-and-Settings) endpoints."
- name: Feature Flag & Setting values
  description: "With these endpoints you can control how your existing Feature Flags\
    \ and Settings should serve their values. \nYou can turn Feature Flags on or off,\
    \ update Setting values and also add, remove or reorder Percentage and Targeting\
    \ Rules.\n\nTo determine which Feature Flag or Setting you want to work with you\
    \ have to pass its `settingId`. It can be\nobtained from the [Feature Flag & Setting](#tag/Feature-Flags-and-Settings)\
    \ endpoints.\n\nYou also have to specify in which Environment you want to change\
    \ the served value configuration by its\n`environmentId` which can be obtained\
    \ from the [List Environments](#operation/get-environments) endpoint."
- name: Feature Flags & Settings
  description: "With these endpoints you can manage your Feature Flags or Settings\
    \ within a Config. \nHowever you can't use them for manipulating the values of\
    \ your Feature Flags and Settings,\nto do that please visit the [Feature Flag\
    \ & Setting values using SDK Key](#tag/Feature-Flag-and-Setting-values-using-SDK-Key)\n\
    and [Feature Flag & Setting values](#tag/Feature-Flag-and-Setting-values) sections\
    \ of the API.\n\nFor using these endpoints, first you have to select which Config\
    \ you want to work with by its `configId` \nwhich can be obtained from the [List\
    \ Configs](#operation/get-configs) endpoint. \nThen you can use it to create new\
    \ Feature Flags or to get information about existing ones.\n\nThen you can obtain\
    \ the `settingId` or `key` of your desired Feature Flag or Setting \nto use them\
    \ for further operations in this API. \n\n<a href=\"https://configcat.com/docs/main-concepts/#setting\"\
    \ target=\"_blank\" rel=\"noopener noreferrer\">Here</a> you can read more about\
    \ the concept of Settings."
- name: Organizations
  description: |-
    With these endpoints you can get useful information about your Organizations.
    This also can be used to manage your [Products](#tag/Products).

    <a href="https://configcat.com/docs/organization/" target="_blank" rel="noopener noreferrer">Here</a> you can read more about the Organizations.
- name: Members
  description: |-
    With these endpoints you can manage your Members.

    <a href="https://configcat.com/docs/advanced/team-collaboration" target="_blank" rel="noopener noreferrer">Here</a> you can read more about Team Collaboration.
- name: Permission Groups
  description: |-
    With these endpoints you can manage your Permission Groups.

    <a href="https://configcat.com/docs/advanced/team-collaboration#permissions--groups" target="_blank" rel="noopener noreferrer">Here</a> you can read more about Permissions.
- name: Products
  description: |-
    With these endpoints you can manage your Products.
    This also can be used to manage [Environments](#tag/Environments), [Configs](#tag/Configs), [Tags](#tag/Tags) and [Permission Groups](#tag/Permission-Groups) through this API.

    <a href="https://configcat.com/docs/main-concepts/#product" target="_blank" rel="noopener noreferrer">Here</a> you can read more about the concept of Products.
- name: Configs
  description: "With these endpoints you can manage your Configs.\nThis also can be\
    \ used to manage [Feature Flags and Settings](#tag/Feature-Flags-and-Settings)\
    \ and their \n[served values](#tag/Feature-Flag-and-Setting-values) through this\
    \ API.\n\n<a href=\"https://configcat.com/docs/main-concepts/#config\" target=\"\
    _blank\" rel=\"noopener noreferrer\">Here</a> you can read more about the concept\
    \ of Configs."
- name: Environments
  description: "With these endpoints you can update existing Environments or add new\
    \ ones into your selected [Product](#tag/Products). \n\n<a href=\"https://configcat.com/docs/main-concepts/#environment\"\
    \ target=\"_blank\" rel=\"noopener noreferrer\">Here</a> you can read more about\
    \ the concept of Environments."
- name: Segments
  description: |-
    With these endpoints you can manage your Segments.
    Segments allow you to group your users based on any of their properties. Define user segments and add them to multiple feature flags.
- name: SDK Keys
  description: With these endpoints you can manage your SDK Keys.
- name: Tags
  description: "With these endpoints you can manage Tags. Tags are stored under a\
    \ Product. You can  and add a Tag to a Feature Flag or Setting using the [Update\
    \ Flag](#operation/update-setting) endpoint."
- name: Audit logs
  description: Access audit log entries.
- name: Me
  description: Information about the current user.
- name: Code References
  description: |-
    With this endpoint you can upload Feature Flag and Setting usage references that will be shown on the ConfigCat Dashboard.

    <a href="https://configcat.com/docs/advanced/code-references/overview/" target="_blank" rel="noopener noreferrer">Here</a> you can read more about the concept of Code References.
paths:
  /v1/products/{productId}/auditlogs:
    get:
      tags:
      - Audit logs
      summary: List Audit log items for Product
      description: "This endpoint returns the list of Audit log items for a given\
        \ Product \nand the result can be optionally filtered by Config and/or Environment."
      operationId: get-auditlogs
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: configId
        in: query
        description: The identifier of the Config.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: environmentId
        in: query
        description: The identifier of the Environment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: auditLogType
        in: query
        description: Filter Audit logs by Audit log type.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/auditLogType'
      - name: fromUtcDateTime
        in: query
        description: Filter Audit logs by starting UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: toUtcDateTime
        in: query
        description: Filter Audit logs by ending UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations/{organizationId}/auditlogs:
    get:
      tags:
      - Audit logs
      summary: List Audit log items for Organization
      description: "This endpoint returns the list of Audit log items for a given\
        \ Organization \nand the result can be optionally filtered by Product and/or\
        \ Config and/or Environment."
      operationId: get-organization-auditlogs
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: productId
        in: query
        description: The identifier of the Product.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: configId
        in: query
        description: The identifier of the Config.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: environmentId
        in: query
        description: The identifier of the Environment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      - name: auditLogType
        in: query
        description: Filter Audit logs by Audit log type.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/auditLogType_1'
      - name: fromUtcDateTime
        in: query
        description: Filter Audit logs by starting UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      - name: toUtcDateTime
        in: query
        description: Filter Audit logs by ending UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}/deleted-settings:
    get:
      tags:
      - Audit logs
      summary: List Deleted Settings
      description: This endpoint returns the list of Feature Flags and Settings that
        were deleted from the given Config.
      operationId: get-deleted-settings
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/code-references:
    post:
      tags:
      - Code References
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeReferenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CodeReferenceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CodeReferenceRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/code-references/delete-reports:
    post:
      tags:
      - Code References
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryReportsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryReportsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteRepositoryReportsRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/configs:
    get:
      tags:
      - Configs
      summary: List Configs
      description: |-
        This endpoint returns the list of the Configs that belongs to the given Product identified by the
        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-configs
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Configs
      summary: Create Config
      description: "This endpoint creates a new Config in a specified Product \nidentified\
        \ by the `productId` parameter, which can be obtained from the [List Products](#operation/get-products)\
        \ endpoint."
      operationId: create-config
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}:
    get:
      tags:
      - Configs
      summary: Get Config
      description: |-
        This endpoint returns the metadata of a Config
        identified by the `configId`.
      operationId: get-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: "When everything is ok, the config data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Configs
      summary: Update Config
      description: This endpoint updates a Config identified by the `configId` parameter.
      operationId: update-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Configs
      summary: Delete Config
      description: This endpoint removes a Config identified by the `configId` parameter.
      operationId: delete-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/environments:
    get:
      tags:
      - Environments
      summary: List Environments
      description: |-
        This endpoint returns the list of the Environments that belongs to the given Product identified by the
        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-environments
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Environments
      summary: Create Environment
      description: "This endpoint creates a new Environment in a specified Product\
        \ \nidentified by the `productId` parameter, which can be obtained from the\
        \ [List Products](#operation/get-products) endpoint."
      operationId: create-environment
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}:
    get:
      tags:
      - Environments
      summary: Get Environment
      description: "This endpoint returns the metadata of an Environment \nidentified\
        \ by the `environmentId`."
      operationId: get-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: "When everything is ok, the environment data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Environments
      summary: Update Environment
      description: This endpoint updates an Environment identified by the `environmentId`
        parameter.
      operationId: update-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Environments
      summary: Delete Environment
      description: This endpoint removes an Environment identified by the `environmentId`
        parameter.
      operationId: delete-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}/settings/{settingId}/value:
    get:
      tags:
      - Feature Flag & Setting values
      summary: Get value
      description: "This endpoint returns the value of a Feature Flag or Setting \n\
        in a specified Environment identified by the `environmentId` parameter.\n\n\
        The most important attributes in the response are the `value`, `rolloutRules`\
        \ and `percentageRules`.\nThe `value` represents what the clients will get\
        \ when the evaluation requests of our SDKs \nare not matching to any of the\
        \ defined Targeting or Percentage Rules, or when there are no additional rules\
        \ to evaluate.\n\nThe `rolloutRules` and `percentageRules` attributes are\
        \ representing the current \nTargeting and Percentage Rules configuration\
        \ of the actual Feature Flag or Setting \nin an **ordered** collection, which\
        \ means the order of the returned rules is matching to the\nevaluation order.\
        \ You can read more about these rules [here](https://configcat.com/docs/advanced/targeting/)."
      operationId: get-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "When everything is ok, the setting value data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Feature Flag & Setting values
      summary: Replace value
      description: "This endpoint replaces the whole value of a Feature Flag or Setting\
        \ in a specified Environment.\n\nOnly the `value`, `rolloutRules` and `percentageRules`\
        \ attributes are modifiable by this endpoint.\n\n**Important:** As this endpoint\
        \ is doing a complete replace, it's important to set every other attribute\
        \ that you don't \nwant to change in its original state. Not listing one means\
        \ that it will reset.\n\nFor example: We have the following resource.\n```\n\
        {\n\t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\": 30,\n\t\t\
        \t\"value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\t\t\"value\"\
        : false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": false\n}\n```\n\
        If we send a replace request body as below:\n```\n{\n\t\"value\": true\n}\n\
        ```\nThen besides that the default value is set to `true`, all the Percentage\
        \ Rules are deleted. \nSo we get a response like this:\n```\n{\n\t\"rolloutPercentageItems\"\
        : [],\n\t\"rolloutRules\": [],\n\t\"value\": true\n}\n```\n\nThe `rolloutRules`\
        \ property describes two types of rules:\n\n- **Targeting rules**: When you\
        \ want to add or update a targenting rule, the `comparator`, `comparisonAttribute`,\
        \ and `comparisonValue` members are required.\n- **Segment rules**: When you\
        \ want to add add or update a segment rule, the `segmentId` which identifies\
        \ the desired segment and the `segmentComparator` members are required."
      operationId: replace-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flag & Setting values
      summary: Update value
      description: "This endpoint updates the value of a Feature Flag or Setting \n\
        with a collection of [JSON Patch](http://jsonpatch.com) operations in a specified\
        \ Environment.\n\nOnly the `value`, `rolloutRules` and `percentageRules` attributes\
        \ are modifiable by this endpoint.\n\nThe advantage of using JSON Patch is\
        \ that you can describe individual update operations on a resource\nwithout\
        \ touching attributes that you don't want to change. It supports collection\
        \ reordering, so it also \ncan be used for reordering the targeting rules\
        \ of a Feature Flag or Setting.\n\nFor example: We have the following resource.\n\
        ```\n{\n\t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\": 30,\n\
        \t\t\t\"value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\t\t\"\
        value\": false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": false\n\
        }\n```\nIf we send an update request body as below:\n```\n[\n\t{\n\t\t\"op\"\
        : \"replace\",\n\t\t\"path\": \"/value\",\n\t\t\"value\": true\n\t}\n]\n```\n\
        Only the default value is going to be set to `true` and all the Percentage\
        \ Rules are remaining unchanged.\nSo we get a response like this:\n```\n{\n\
        \t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\": 30,\n\t\t\t\"\
        value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\t\t\"value\":\
        \ false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": true\n}\n```\n\
        \nThe `rolloutRules` property describes two types of rules:\n\n- **Targeting\
        \ rules**: When you want to add or update a targenting rule, the `comparator`,\
        \ `comparisonAttribute`, and `comparisonValue` members are required.\n- **Segment\
        \ rules**: When you want to add add or update a segment rule, the `segmentId`\
        \ which identifies the desired segment and the `segmentComparator` members\
        \ are required."
      operationId: update-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          text/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/*+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
        required: true
      responses:
        "200":
          description: When the patch was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}/environments/{environmentId}/values:
    get:
      tags:
      - Feature Flag & Setting values
      summary: Get values
      description: "This endpoint returns the value of a specified Config's Feature\
        \ Flags or Settings identified by the `configId` parameter\nin a specified\
        \ Environment identified by the `environmentId` parameter.\n\nThe most important\
        \ attributes in the response are the `value`, `rolloutRules` and `percentageRules`.\n\
        The `value` represents what the clients will get when the evaluation requests\
        \ of our SDKs \nare not matching to any of the defined Targeting or Percentage\
        \ Rules, or when there are no additional rules to evaluate.\n\nThe `rolloutRules`\
        \ and `percentageRules` attributes are representing the current \nTargeting\
        \ and Percentage Rules configuration of the actual Feature Flag or Setting\
        \ \nin an **ordered** collection, which means the order of the returned rules\
        \ is matching to the\nevaluation order. You can read more about these rules\
        \ [here](https://configcat.com/docs/advanced/targeting/)."
      operationId: get-setting-values
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: "When everything is ok, the setting values returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSettingValuesModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigSettingValuesModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Feature Flag & Setting values
      summary: Post values
      description: "This endpoint replaces the values of a specified Config's Feature\
        \ Flags or Settings identified by the `configId` parameter\nin a specified\
        \ Environment identified by the `environmentId` parameter.\n\nOnly the `value`,\
        \ `rolloutRules` and `percentageRules` attributes are modifiable by this endpoint.\n\
        \n**Important:** As this endpoint is doing a complete replace, it's important\
        \ to set every other attribute that you don't \nwant to change in its original\
        \ state. Not listing one means that it will reset.\n\nFor example: We have\
        \ the following resource.\n```\n{\n    \"settingValues\": [\n\t\t{\n\t\t\t\
        \"rolloutPercentageItems\": [\n\t\t\t\t{\n\t\t\t\t\t\"percentage\": 30,\n\t\
        \t\t\t\t\"value\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"percentage\":\
        \ 70,\n\t\t\t\t\t\"value\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"rolloutRules\"\
        : [],\n\t\t\t\"value\": false,\n\t\t\t\"settingId\": 1\n\t\t}\n\t]\n}\n```\n\
        If we send a replace request body as below:\n```\n{ \n\t\"settingValues\"\
        : [\n\t\t{\n\t\t\t\"value\": true,\n\t\t\t\"settingId\": 1\n\t\t}\n\t]\n}\n\
        ```\nThen besides that the default value is set to `true`, all the Percentage\
        \ Rules are deleted. \nSo we get a response like this:\n```\n{\n\t\"settingValues\"\
        : [\n\t\t{\n\t\t\t\"rolloutPercentageItems\": [],\n\t\t\t\"rolloutRules\"\
        : [],\n\t\t\t\"value\": true,\n\t\t\t\"setting\": \n\t\t\t{\n\t\t\t\t\"settingId\"\
        : 1\n\t\t\t}\n\t\t}\n\t]\n}\n```\n\nThe `rolloutRules` property describes\
        \ two types of rules:\n\n- **Targeting rules**: When you want to add or update\
        \ a targenting rule, the `comparator`, `comparisonAttribute`, and `comparisonValue`\
        \ members are required.\n- **Segment rules**: When you want to add add or\
        \ update a segment rule, the `segmentId` which identifies the desired segment\
        \ and the `segmentComparator` members are required."
      operationId: post-setting-values
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValuesWithIdModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValuesWithIdModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValuesWithIdModel'
        required: true
      responses:
        "200":
          description: "When everything is ok, the updated setting values returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSettingValuesModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigSettingValuesModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/settings/{settingKeyOrId}/value:
    get:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Get value
      description: "This endpoint returns the value of a Feature Flag or Setting \n\
        in a specified Environment identified by the <a target=\"_blank\" rel=\"noopener\
        \ noreferrer\" href=\"https://app.configcat.com/sdkkey\">SDK key</a> passed\
        \ in the `X-CONFIGCAT-SDKKEY` header.\n\nThe most important attributes in\
        \ the response are the `value`, `rolloutRules` and `percentageRules`.\nThe\
        \ `value` represents what the clients will get when the evaluation requests\
        \ of our SDKs \nare not matching to any of the defined Targeting or Percentage\
        \ Rules, or when there are no additional rules to evaluate.\n\nThe `rolloutRules`\
        \ and `percentageRules` attributes are representing the current \nTargeting\
        \ and Percentage Rules configuration of the actual Feature Flag or Setting\
        \ \nin an **ordered** collection, which means the order of the returned rules\
        \ is matching to the\nevaluation order. You can read more about these rules\
        \ [here](https://configcat.com/docs/advanced/targeting/)."
      operationId: get-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Replace value
      description: "This endpoint replaces the value of a Feature Flag or Setting\
        \ \nin a specified Environment identified by the <a target=\"_blank\" rel=\"\
        noopener noreferrer\" href=\"https://app.configcat.com/sdkkey\">SDK key</a>\
        \ passed in the `X-CONFIGCAT-SDKKEY` header.\n\nOnly the `value`, `rolloutRules`\
        \ and `percentageRules` attributes are modifiable by this endpoint.\n\n**Important:**\
        \ As this endpoint is doing a complete replace, it's important to set every\
        \ other attribute that you don't \nwant to change to its original state. Not\
        \ listing one means that it will reset.\n\nFor example: We have the following\
        \ resource.\n```\n{\n\t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\"\
        : 30,\n\t\t\t\"value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\
        \t\t\"value\": false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": false\n\
        }\n```\nIf we send a replace request body as below:\n```\n{\n\t\"value\":\
        \ true\n}\n```\nThen besides that the default served value is set to `true`,\
        \ all the Percentage Rules are deleted. \nSo we get a response like this:\n\
        ```\n{\n\t\"rolloutPercentageItems\": [],\n\t\"rolloutRules\": [],\n\t\"value\"\
        : true\n}\n```"
      operationId: replace-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Update value
      description: "This endpoint updates the value of a Feature Flag or Setting \n\
        with a collection of [JSON Patch](http://jsonpatch.com) operations in a specified\
        \ Environment\nidentified by the <a target=\"_blank\" rel=\"noopener noreferrer\"\
        \ href=\"https://app.configcat.com/sdkkey\">SDK key</a> passed in the `X-CONFIGCAT-SDKKEY`\
        \ header.\n\nOnly the `value`, `rolloutRules` and `percentageRules` attributes\
        \ are modifiable by this endpoint.\n\nThe advantage of using JSON Patch is\
        \ that you can describe individual update operations on a resource\nwithout\
        \ touching attributes that you don't want to change. It supports collection\
        \ reordering, so it also \ncan be used for reordering the targeting rules\
        \ of a Feature Flag or Setting.\n\nFor example: We have the following resource.\n\
        ```\n{\n\t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\": 30,\n\
        \t\t\t\"value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\t\t\"\
        value\": false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": false\n\
        }\n```\nIf we send an update request body as below:\n```\n[\n\t{\n\t\t\"op\"\
        : \"replace\",\n\t\t\"path\": \"/value\",\n\t\t\"value\": true\n\t}\n]\n```\n\
        Only the default served value is going to be set to `true` and all the Percentage\
        \ Rules are remaining unchanged.\nSo we get a response like this:\n```\n{\n\
        \t\"rolloutPercentageItems\": [\n\t\t{\n\t\t\t\"percentage\": 30,\n\t\t\t\"\
        value\": true\n\t\t},\n\t\t{\n\t\t\t\"percentage\": 70,\n\t\t\t\"value\":\
        \ false\n\t\t}\n\t],\n\t\"rolloutRules\": [],\n\t\"value\": true\n}\n```"
      operationId: update-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          text/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/*+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              modify targeting rule:
                description: This example modifies the first targeting rule's comparison
                  value and the second's value.
                value:
                - op: replace
                  path: /rolloutRules/0/comparisonValue
                  value: '@example2.com'
                - op: replace
                  path: /rolloutRules/1/value
                  value: true
              add segment rules:
                description: This example adds a segment to the evaluation rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    segmentComparator: isIn
                    segmentId: 008a1fd6-8245-4ea8-90dc-a1dc36c1b4ff
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}/settings:
    get:
      tags:
      - Feature Flags & Settings
      summary: List Flags
      description: "This endpoint returns the list of the Feature Flags and Settings\
        \ defined in a \nspecified Config, identified by the `configId` parameter."
      operationId: get-settings
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Feature Flags & Settings
      summary: Create Flag
      description: |-
        This endpoint creates a new Feature Flag or Setting in a specified Config
        identified by the `configId` parameter.

        **Important:** The `key` attribute must be unique within the given Config.
      operationId: create-setting
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSettingInitialValues'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSettingInitialValues'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSettingInitialValues'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/settings/{settingId}:
    get:
      tags:
      - Feature Flags & Settings
      summary: Get Flag
      description: "This endpoint returns the metadata attributes of a Feature Flag\
        \ or Setting \nidentified by the `settingId` parameter."
      operationId: get-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: "When everything is ok, the setting data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Feature Flags & Settings
      summary: Delete Flag
      description: "This endpoint removes a Feature Flag or Setting from a specified\
        \ Config, \nidentified by the `configId` parameter."
      operationId: delete-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flags & Settings
      summary: Update Flag
      description: "This endpoint updates the metadata of a Feature Flag or Setting\
        \ \nwith a collection of [JSON Patch](http://jsonpatch.com) operations in\
        \ a specified Config.\n\nOnly the `name`, `hint` and `tags` attributes are\
        \ modifiable by this endpoint.\nThe `tags` attribute is a simple collection\
        \ of the [tag IDs](#operation/get-tags) attached to the given setting.\n\n\
        The advantage of using JSON Patch is that you can describe individual update\
        \ operations on a resource\nwithout touching attributes that you don't want\
        \ to change.\n\nFor example: We have the following resource.\n```\n{\n\t\"\
        settingId\": 5345,\n\t\"key\": \"myGrandFeature\",\n\t\"name\": \"Tihs is\
        \ a naem with soem typos.\",\n\t\"hint\": \"This flag controls my grandioso\
        \ feature.\",\n\t\"settingType\": \"boolean\",\n\t\"tags\": [\n\t\t{\n\t\t\
        \t\"tagId\": 0,\n\t\t\t\"name\": \"sample tag\",\n\t\t\t\"color\": \"whale\"\
        \n\t\t}\n\t]\n}\n```\nIf we send an update request body as below (it changes\
        \ the name and adds the already existing tag with the id 2):\n```\n[\n\t{\n\
        \t\t\"op\": \"replace\",\n\t\t\"path\": \"/name\",\n\t\t\"value\": \"This\
        \ is the name without typos.\"\n\t},\n\t{\n\t\t\"op\": \"add\",\n\t\t\"path\"\
        : \"/tags/-\",\n\t\t\"value\": 2\n\t}\n]\n```\nOnly the `name` and `tags`\
        \ are going to be updated and all the other attributes are remaining unchanged.\n\
        So we get a response like this:\n```\n{\n\t\"settingId\": 5345,\n\t\"key\"\
        : \"myGrandFeature\",\n\t\"name\": \"This is the name without typos.\",\n\t\
        \"hint\": \"This flag controls my grandioso feature.\",\n\t\"settingType\"\
        : \"boolean\",\n\t\"tags\": [\n\t\t{\n\t\t\t\"tagId\": 0,\n\t\t\t\"name\"\
        : \"sample tag\",\n\t\t\t\"color\": \"whale\"\n\t\t},\n\t\t{\n\t\t\t\"tagId\"\
        : 2,\n\t\t\t\"name\": \"another tag\",\n\t\t\t\"color\": \"koala\"\n\t\t}\n\
        \t]\n}\n```"
      operationId: update-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
          text/json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
        required: true
      responses:
        "200":
          description: When the update was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/integrationLink/{integrationLinkType}/{key}/details:
    get:
      tags:
      - Integration links
      summary: Get Integration link
      description: ""
      operationId: get-integration-link-details
      parameters:
      - name: integrationLinkType
        in: path
        description: The integration link's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "When everything is ok, the details for the integration link\
            \ returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkDetailsModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkDetailsModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}/settings/{settingId}/integrationLinks/{integrationLinkType}/{key}:
    post:
      tags:
      - Integration links
      summary: Add or update Integration link
      description: ""
      operationId: add-or-update-integration-link
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: integrationLinkType
        in: path
        description: The integration link's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
      responses:
        "200":
          description: "When everything is ok, the integration link data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Integration links
      summary: Delete Integration link
      description: ""
      operationId: delete-integration-link
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: integrationLinkType
        in: path
        description: The integration's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: When everything is ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationLinkModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationLinkModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/jira/Connect:
    post:
      tags:
      - Integration links
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ConnectRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConnectRequest'
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/jira/environments/{environmentId}/settings/{settingId}/integrationLinks/{key}:
    post:
      tags:
      - Integration links
      operationId: jira-add-or-update-integration-link
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateJiraIntegrationLinkModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateJiraIntegrationLinkModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateJiraIntegrationLinkModel'
      responses:
        "200":
          description: "When everything is ok, the integration link data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/me:
    get:
      tags:
      - Me
      summary: Get authenticated user details
      description: ""
      operationId: get-me
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MeModel'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations/{organizationId}/members:
    get:
      tags:
      - Members
      summary: List Organization Members
      description: "This endpoint returns the list of Members that belongs \nto the\
        \ given Organization, identified by the `organizationId` parameter."
      operationId: get-organization-members
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/members:
    get:
      tags:
      - Members
      summary: List Product Members
      description: "This endpoint returns the list of Members that belongs \nto the\
        \ given Product, identified by the `productId` parameter."
      operationId: get-product-members
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations/{organizationId}/members/{userId}:
    post:
      tags:
      - Members
      summary: Update Member Permissions
      description: "This endpoint adds a Member identified by the `userId` to one\
        \ or more Permission Groups. \nThis endpoint can also be used to move a Member\
        \ between Permission Groups within a Product.\nOnly a single Permission Group\
        \ can be set per Product."
      operationId: add-member-to-group
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: The identifier of the Member.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserToGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddUserToGroupRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddUserToGroupRequest'
        required: true
      responses:
        "200":
          description: When the addition was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Members
      summary: Delete Member from Organization
      description: "This endpoint removes a Member identified by the `userId` from\
        \ the \ngiven Organization identified by the `organizationId` parameter."
      operationId: delete-organization-member
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: The identifier of the Member.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/members/invite:
    post:
      tags:
      - Members
      summary: Invite Member
      description: This endpoint invites a Member into the given Product identified
        by the `productId` parameter.
      operationId: invite-member
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteMembersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InviteMembersRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InviteMembersRequest'
        required: true
      responses:
        "200":
          description: When the invite was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/members/{userId}:
    delete:
      tags:
      - Members
      summary: Delete Member from Product
      description: "This endpoint removes a Member identified by the `userId` from\
        \ the \ngiven Product identified by the `productId` parameter."
      operationId: delete-product-member
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: userId
        in: path
        description: The identifier of the Member.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations:
    get:
      tags:
      - Organizations
      summary: List Organizations
      description: This endpoint returns the list of the Organizations that belongs
        to the user.
      operationId: get-organizations
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/permissions:
    get:
      tags:
      - Permission Groups
      summary: List Permission Groups
      description: |-
        This endpoint returns the list of the Permission Groups that belongs to the given Product identified by the
        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-permission-groups
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionGroupModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionGroupModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Permission Groups
      summary: Create Permission Group
      description: "This endpoint creates a new Permission Group in a specified Product\
        \ \nidentified by the `productId` parameter, which can be obtained from the\
        \ [List Products](#operation/get-products) endpoint."
      operationId: create-permission-group
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionGroupRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePermissionGroupRequest'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/permissions/{permissionGroupId}:
    get:
      tags:
      - Permission Groups
      summary: Get Permission Group
      description: "This endpoint returns the metadata of a Permission Group \nidentified\
        \ by the `permissionGroupId`."
      operationId: get-permission-group
      parameters:
      - name: permissionGroupId
        in: path
        description: The identifier of the Permission Group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "When everything is ok, the permission group data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Permission Groups
      summary: Update Permission Group
      description: This endpoint updates a Permission Group identified by the `permissionGroupId`
        parameter.
      operationId: update-permission-group
      parameters:
      - name: permissionGroupId
        in: path
        description: The identifier of the Permission Group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionGroupRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionGroupRequest'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PermissionGroupModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Permission Groups
      summary: Delete Permission Group
      description: This endpoint removes a Permission Group identified by the `permissionGroupId`
        parameter.
      operationId: delete-permission-group
      parameters:
      - name: permissionGroupId
        in: path
        description: The identifier of the Permission Group.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products:
    get:
      tags:
      - Products
      summary: List Products
      description: This endpoint returns the list of the Products that belongs to
        the user.
      operationId: get-products
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations/{organizationId}/products:
    post:
      tags:
      - Products
      summary: Create Product
      description: "This endpoint creates a new Product in a specified Organization\
        \ \nidentified by the `organizationId` parameter, which can be obtained from\
        \ the [List Organizations](#operation/get-organizations) endpoint."
      operationId: create-product
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}:
    get:
      tags:
      - Products
      summary: Get Product
      description: "This endpoint returns the metadata of a Product \nidentified by\
        \ the `productId`."
      operationId: get-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: "When everything is ok, the product data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Products
      summary: Update Product
      description: This endpoint updates a Product identified by the `productId` parameter.
      operationId: update-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Products
      summary: Delete Product
      description: This endpoint removes a Product identified by the `productId` parameter.
      operationId: delete-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}/environments/{environmentId}:
    get:
      tags:
      - SDK Keys
      summary: Get SDK Key
      description: This endpoint returns the SDK Key for your Config in a specified
        Environment.
      operationId: get-sdk-keys
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkKeysModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SdkKeysModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/segments:
    get:
      tags:
      - Segments
      summary: List Segments
      description: |-
        This endpoint returns the list of the Segments that belongs to the given Product identified by the
        `productId` parameter, which can be obtained from the [List Products](#operation/get-products) endpoint.
      operationId: get-segments
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SegmentListModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SegmentListModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Segments
      summary: Create Segment
      description: "This endpoint creates a new Segment in a specified Product \n\
        identified by the `productId` parameter, which can be obtained from the [List\
        \ Products](#operation/get-products) endpoint."
      operationId: create-segment
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSegmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSegmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSegmentModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SegmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/segments/{segmentId}:
    get:
      tags:
      - Segments
      summary: Get Segment
      description: |-
        This endpoint returns the metadata of a Segment
        identified by the `segmentId`.
      operationId: get-segment
      parameters:
      - name: segmentId
        in: path
        description: The identifier of the Segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: "When everything is ok, the config data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SegmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Segments
      summary: Update Segment
      description: This endpoint updates a Segment identified by the `segmentId` parameter.
      operationId: update-segment
      parameters:
      - name: segmentId
        in: path
        description: The identifier of the Segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSegmentModel'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SegmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Segments
      summary: Delete Segment
      description: This endpoint removes a Segment identified by the `segmentId` parameter.
      operationId: delete-segment
      parameters:
      - name: segmentId
        in: path
        description: The identifier of the Segment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/tags:
    get:
      tags:
      - Tags
      summary: List Tags
      description: "This endpoint returns the list of the Tags in a \nspecified Product,\
        \ identified by the `productId` parameter."
      operationId: get-tags
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Tags
      summary: Create Tag
      description: "This endpoint creates a new Tag in a specified Product \nidentified\
        \ by the `productId` parameter, which can be obtained from the [List Products](#operation/get-products)\
        \ endpoint."
      operationId: create-tag
      parameters:
      - name: productId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/tags/{tagId}:
    get:
      tags:
      - Tags
      summary: Get Tag
      description: "This endpoint returns the metadata of a Tag \nidentified by the\
        \ `tagId`."
      operationId: get-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "When everything is ok, the tag data returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Tags
      summary: Update Tag
      description: This endpoint updates a Tag identified by the `tagId` parameter.
      operationId: update-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: "This endpoint deletes a Tag identified by the `tagId` parameter.\
        \ To remove a Tag from a Feature Flag or Setting use the [Update Flag](#operation/update-setting)\
        \ endpoint."
      operationId: delete-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/tags/{tagId}/settings:
    get:
      tags:
      - Tags
      summary: List Settings by Tag
      description: "This endpoint returns the list of the Settings that \nhas the\
        \ specified Tag, identified by the `tagId` parameter."
      operationId: get-settings-by-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "When everything is ok, the settings data returned."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
components:
  schemas:
    AccessType:
      type: string
      enum:
      - readOnly
      - full
      - custom
    AddOrUpdateIntegrationLinkModel:
      type: object
      properties:
        description:
          maxLength: 1000
          type: string
          nullable: true
        url:
          maxLength: 1000
          type: string
          nullable: true
      additionalProperties: false
    AddOrUpdateJiraIntegrationLinkModel:
      required:
      - clientKey
      - jiraJwtToken
      type: object
      properties:
        jiraJwtToken:
          maxLength: 15000
          minLength: 0
          type: string
        clientKey:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        url:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    AddUserToGroupRequest:
      required:
      - permissionGroupIds
      type: object
      properties:
        permissionGroupIds:
          type: array
          items:
            type: integer
            format: int64
      additionalProperties: false
    AuditLogItemModel:
      type: object
      properties:
        auditLogId:
          type: integer
          format: int64
        auditLogDateTime:
          type: string
          format: date-time
        auditLogTypeEnum:
          $ref: '#/components/schemas/AuditLogType'
        auditLogType:
          type: string
          nullable: true
        userEmail:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        where:
          type: string
          nullable: true
        why:
          type: string
          nullable: true
        actionTarget:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
      additionalProperties: false
      example:
        auditLogTypeEnum: productCreated
        auditLogDateTime: 2000-01-23T04:56:07.000+00:00
        auditLogType: auditLogType
        auditLogId: 0
        why: why
        userEmail: userEmail
        where: where
        details: details
        actionTarget: actionTarget
        userName: userName
    AuditLogType:
      type: string
      enum:
      - productCreated
      - productChanged
      - productOwnershipTransferred
      - productDeleted
      - productsReordered
      - teamMemberInvited
      - teamMemberInvitationRevoked
      - teamMemberJoined
      - teamMemberPermissionGroupChanged
      - teamMemberRemoved
      - teamMemberLeft
      - teamMemberInvitationChanged
      - teamMemberInvitationResent
      - teamMemberInvitationRejected
      - configCreated
      - configChanged
      - configDeleted
      - configsReordered
      - environmentCreated
      - environmentChanged
      - environmentDeleted
      - environmentsReordered
      - settingCreated
      - settingChanged
      - settingDeleted
      - settingsReordered
      - settingValueChanged
      - webHookCreated
      - webHookChanged
      - webHookDeleted
      - subscriptionChanged
      - permissionGroupCreated
      - permissionGroupChanged
      - permissionGroupDeleted
      - permissionGroupDefault
      - apiKeyAdded
      - apiKeyRemoved
      - integrationAdded
      - integrationChanged
      - integrationRemoved
      - apiKeyConnected
      - integrationLinkAdded
      - integrationLinkRemoved
      - organizationAdded
      - organizationRemoved
      - organizationChanged
      - organizationSubscriptionTypeChanged
      - organizationAdminChanged
      - organizationAdminLeft
      - organizationAdminDisabled2FA
      - tagAdded
      - tagChanged
      - tagRemoved
      - settingTagAdded
      - settingTagRemoved
      - publicApiAccessTokenAdded
      - publicApiAccessTokenRemoved
      - domainAdded
      - domainVerified
      - domainRemoved
      - domainSamlConfigured
      - domainSamlDeleted
      - autoProvisioningConfigurationChanged
      - organizationMemberJoined
      - organizationMemberProductJoinRequested
      - organizationMemberProductJoinRequestRejected
      - organizationMemberProductJoinRequestApproved
      - codeReferencesUploaded
      - codeReferenceDeleted
      - codeReferenceStaleBranchDeleted
      - segmentCreated
      - segmentChanged
      - segmentDeleted
      - webhookSigningKeyDeleted
      - webhookSigningKeyCreated
    CodeReferenceRequest:
      required:
      - branch
      - configId
      - repository
      type: object
      properties:
        configId:
          type: string
          description: The Config's identifier the scanning was performed against.
          format: uuid
        repository:
          maxLength: 255
          minLength: 0
          type: string
          description: The source control repository that contains the scanned code.
            (Source of the repository selector on the ConfigCat Dashboard)
        branch:
          maxLength: 255
          minLength: 0
          type: string
          description: The source control branch on where the scan was performed.
            (Source of the branch selector on the ConfigCat Dashboard)
        commitUrl:
          maxLength: 1000
          minLength: 0
          type: string
          description: The related commit's URL. (Appears on the ConfigCat Dashboard)
          nullable: true
        commitHash:
          maxLength: 255
          minLength: 0
          type: string
          description: The related commit's hash. (Appears on the ConfigCat Dashboard)
          nullable: true
        uploader:
          maxLength: 255
          minLength: 0
          type: string
          description: The scanning tool's name. (Appears on the ConfigCat Dashboard)
          nullable: true
        activeBranches:
          type: array
          description: The currently active branches of the repository. Each previously
            uploaded report that belongs to a non-reported active branch is being
            deleted.
          nullable: true
          items:
            type: string
        flagReferences:
          type: array
          description: The actual code reference collection.
          nullable: true
          items:
            $ref: '#/components/schemas/FlagReference'
      additionalProperties: false
    ConfigModel:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        migratedConfigId:
          type: string
          format: uuid
          nullable: true
        evaluationVersion:
          $ref: '#/components/schemas/EvaluationVersion'
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        description: description
        migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        evaluationVersion: v1
        order: 0
    ConfigModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        migratedConfigId:
          type: string
          format: uuid
          nullable: true
        evaluationVersion:
          $ref: '#/components/schemas/EvaluationVersion'
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__links'
    ConfigSettingValueModel:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          description: The value to serve. It must respect the setting type.
          nullable: true
        setting:
          $ref: '#/components/schemas/SettingDataModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdaterUserEmail:
          type: string
          nullable: true
        lastUpdaterUserFullName:
          type: string
          nullable: true
        integrationLinks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/IntegrationLinkModel'
        settingTags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SettingTagModel'
      additionalProperties: false
      example:
        rolloutRules:
        - comparator: isOneOf
          comparisonValue: comparisonValue
          segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          segmentComparator: isIn
          value: ""
          comparisonAttribute: comparisonAttribute
        - comparator: isOneOf
          comparisonValue: comparisonValue
          segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          segmentComparator: isIn
          value: ""
          comparisonAttribute: comparisonAttribute
        rolloutPercentageItems:
        - percentage: 0
          value: ""
        - percentage: 0
          value: ""
        lastUpdaterUserEmail: lastUpdaterUserEmail
        value: ""
        integrationLinks:
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        settingTags:
        - color: color
          tagId: 5
          name: name
          settingTagId: 5
        - color: color
          tagId: 5
          name: name
          settingTagId: 5
        setting:
          createdAt: 2000-01-23T04:56:07.000+00:00
          creatorEmail: creatorEmail
          hint: hint
          name: name
          creatorFullName: creatorFullName
          isWatching: true
          settingType: boolean
          key: key
          settingId: 6
          order: 1
        updatedAt: 2000-01-23T04:56:07.000+00:00
        lastUpdaterUserFullName: lastUpdaterUserFullName
    ConfigSettingValuesModel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ConfigModel'
        environment:
          $ref: '#/components/schemas/EnvironmentModel'
        readOnly:
          type: boolean
        settingValues:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ConfigSettingValueModel'
      additionalProperties: false
      example:
        environment:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          color: color
          name: name
          description: description
          order: 0
          reasonRequired: true
        readOnly: true
        settingValues:
        - rolloutRules:
          - comparator: isOneOf
            comparisonValue: comparisonValue
            segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            segmentComparator: isIn
            value: ""
            comparisonAttribute: comparisonAttribute
          - comparator: isOneOf
            comparisonValue: comparisonValue
            segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            segmentComparator: isIn
            value: ""
            comparisonAttribute: comparisonAttribute
          rolloutPercentageItems:
          - percentage: 0
            value: ""
          - percentage: 0
            value: ""
          lastUpdaterUserEmail: lastUpdaterUserEmail
          value: ""
          integrationLinks:
          - integrationLinkType: trello
            description: description
            key: key
            url: url
          - integrationLinkType: trello
            description: description
            key: key
            url: url
          settingTags:
          - color: color
            tagId: 5
            name: name
            settingTagId: 5
          - color: color
            tagId: 5
            name: name
            settingTagId: 5
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            isWatching: true
            settingType: boolean
            key: key
            settingId: 6
            order: 1
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastUpdaterUserFullName: lastUpdaterUserFullName
        - rolloutRules:
          - comparator: isOneOf
            comparisonValue: comparisonValue
            segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            segmentComparator: isIn
            value: ""
            comparisonAttribute: comparisonAttribute
          - comparator: isOneOf
            comparisonValue: comparisonValue
            segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            segmentComparator: isIn
            value: ""
            comparisonAttribute: comparisonAttribute
          rolloutPercentageItems:
          - percentage: 0
            value: ""
          - percentage: 0
            value: ""
          lastUpdaterUserEmail: lastUpdaterUserEmail
          value: ""
          integrationLinks:
          - integrationLinkType: trello
            description: description
            key: key
            url: url
          - integrationLinkType: trello
            description: description
            key: key
            url: url
          settingTags:
          - color: color
            tagId: 5
            name: name
            settingTagId: 5
          - color: color
            tagId: 5
            name: name
            settingTagId: 5
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            isWatching: true
            settingType: boolean
            key: key
            settingId: 6
            order: 1
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastUpdaterUserFullName: lastUpdaterUserFullName
        config:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          description: description
          migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evaluationVersion: v1
          order: 0
    ConnectRequest:
      required:
      - clientKey
      - jiraJwtToken
      type: object
      properties:
        clientKey:
          maxLength: 255
          minLength: 0
          type: string
        jiraJwtToken:
          maxLength: 15000
          minLength: 0
          type: string
      additionalProperties: false
    CreateConfigRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        evaluationVersion:
          $ref: '#/components/schemas/EvaluationVersion'
      additionalProperties: false
    CreateEnvironmentModel:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    CreateOrUpdateEnvironmentAccessModel:
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        environmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
      additionalProperties: false
    CreatePermissionGroupRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        canManageMembers:
          type: boolean
        canCreateOrUpdateConfig:
          type: boolean
        canDeleteConfig:
          type: boolean
        canCreateOrUpdateEnvironment:
          type: boolean
        canDeleteEnvironment:
          type: boolean
        canCreateOrUpdateSetting:
          type: boolean
        canTagSetting:
          type: boolean
        canDeleteSetting:
          type: boolean
        canCreateOrUpdateTag:
          type: boolean
        canDeleteTag:
          type: boolean
        canManageWebhook:
          type: boolean
        canUseExportImport:
          type: boolean
        canManageProductPreferences:
          type: boolean
        canManageIntegrations:
          type: boolean
        canViewSdkKey:
          type: boolean
        canRotateSdkKey:
          type: boolean
        canViewProductStatistics:
          type: boolean
        canViewProductAuditLog:
          type: boolean
        canCreateOrUpdateSegments:
          type: boolean
        canDeleteSegments:
          type: boolean
        accessType:
          $ref: '#/components/schemas/AccessType'
        newEnvironmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
        environmentAccesses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CreateOrUpdateEnvironmentAccessModel'
      additionalProperties: false
    CreateProductRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 1000
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    CreateSegmentModel:
      required:
      - comparator
      - comparisonAttribute
      - comparisonValue
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        comparisonAttribute:
          maxLength: 1000
          minLength: 0
          type: string
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          maxLength: 65535
          minLength: 0
          type: string
      additionalProperties: false
    CreateSettingInitialValues:
      required:
      - key
      - name
      - settingType
      type: object
      properties:
        hint:
          maxLength: 1000
          minLength: 0
          type: string
          description: "A short description for the setting, shown on the Dashboard\
            \ UI."
          nullable: true
        tags:
          type: array
          description: The IDs of the tags which are attached to the setting.
          nullable: true
          items:
            type: integer
            format: int64
        key:
          maxLength: 255
          minLength: 0
          pattern: "^[a-zA-Z]+[a-zA-Z0-9_]*"
          type: string
          description: The key of the setting.
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: "The name of the setting, shown on the Dashboard UI."
        settingType:
          $ref: '#/components/schemas/SettingType'
        initialValues:
          type: array
          description: "Optional, initial values of the feature flag or setting in\
            \ the given Environments."
          nullable: true
          items:
            $ref: '#/components/schemas/InitialValue'
      additionalProperties: false
    CreateTagModel:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    DeleteIntegrationLinkModel:
      type: object
      properties:
        hasRemainingIntegrationLink:
          type: boolean
      additionalProperties: false
      example:
        hasRemainingIntegrationLink: true
    DeleteRepositoryReportsRequest:
      required:
      - configId
      - repository
      type: object
      properties:
        configId:
          type: string
          description: The Config's identifier from where the reports should be deleted.
          format: uuid
        repository:
          maxLength: 255
          minLength: 0
          type: string
          description: The source control repository which's reports should be deleted.
        branch:
          maxLength: 255
          minLength: 0
          type: string
          description: "If it's set, only this branch's reports belonging to the given\
            \ repository will be deleted."
          nullable: true
        settingId:
          type: integer
          description: "If it's set, only this setting's reports belonging to the\
            \ given repository will be deleted."
          format: int32
          nullable: true
      additionalProperties: false
    EnvironmentAccessModel:
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        environmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
      additionalProperties: false
      example:
        environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        color: color
        environmentAccessType: null
        name: name
        description: description
        order: 6
        reasonRequired: true
    EnvironmentAccessType:
      type: string
      enum:
      - full
      - readOnly
      - none
    EnvironmentModel:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        color: color
        name: name
        description: description
        order: 0
        reasonRequired: true
    EnvironmentModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    EvaluationVersion:
      type: string
      enum:
      - v1
      - v2
    FlagReference:
      required:
      - references
      - settingId
      type: object
      properties:
        settingId:
          type: integer
          description: The identifier of the Feature Flag or Setting the code reference
            belongs to.
          format: int32
        references:
          type: array
          description: The actual references to the given Feature Flag or Setting.
          items:
            $ref: '#/components/schemas/ReferenceLines'
      additionalProperties: false
    InitialValue:
      type: object
      properties:
        environmentId:
          type: string
          description: The ID of the Environment where the initial value should be
            set.
          format: uuid
        value:
          description: The initial value in the given Environment. It must respect
            the setting type.
          nullable: true
      additionalProperties: false
    IntegrationLinkDetail:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        config:
          $ref: '#/components/schemas/ConfigModel'
        environment:
          $ref: '#/components/schemas/EnvironmentModel'
        setting:
          $ref: '#/components/schemas/SettingDataModel'
        readOnly:
          type: boolean
        status:
          type: string
          nullable: true
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        environment:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          color: color
          name: name
          description: description
          order: 0
          reasonRequired: true
        readOnly: true
        config:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          description: description
          migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evaluationVersion: v1
          order: 0
        setting:
          createdAt: 2000-01-23T04:56:07.000+00:00
          creatorEmail: creatorEmail
          hint: hint
          name: name
          creatorFullName: creatorFullName
          isWatching: true
          settingType: boolean
          key: key
          settingId: 6
          order: 1
        status: status
    IntegrationLinkDetailsModel:
      type: object
      properties:
        details:
          type: array
          nullable: true
          readOnly: true
          items:
            $ref: '#/components/schemas/IntegrationLinkDetail'
        allIntegrationLinkCount:
          type: integer
          format: int32
      additionalProperties: false
      example:
        allIntegrationLinkCount: 0
        details:
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          environment:
            product:
              productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              organization:
                organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
              name: name
              description: description
              order: 1
              reasonRequired: true
            environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            color: color
            name: name
            description: description
            order: 0
            reasonRequired: true
          readOnly: true
          config:
            product:
              productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              organization:
                organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
              name: name
              description: description
              order: 1
              reasonRequired: true
            configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            description: description
            migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            evaluationVersion: v1
            order: 0
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            isWatching: true
            settingType: boolean
            key: key
            settingId: 6
            order: 1
          status: status
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          environment:
            product:
              productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              organization:
                organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
              name: name
              description: description
              order: 1
              reasonRequired: true
            environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            color: color
            name: name
            description: description
            order: 0
            reasonRequired: true
          readOnly: true
          config:
            product:
              productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              organization:
                organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                name: name
              name: name
              description: description
              order: 1
              reasonRequired: true
            configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            description: description
            migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            evaluationVersion: v1
            order: 0
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            isWatching: true
            settingType: boolean
            key: key
            settingId: 6
            order: 1
          status: status
    IntegrationLinkModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        integrationLinkType:
          $ref: '#/components/schemas/IntegrationLinkType'
        url:
          type: string
          nullable: true
      additionalProperties: false
      example:
        integrationLinkType: trello
        description: description
        key: key
        url: url
    IntegrationLinkType:
      type: string
      enum:
      - trello
      - jira
      - monday
    InviteMembersRequest:
      required:
      - emails
      - permissionGroupId
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
        permissionGroupId:
          type: integer
          format: int64
      additionalProperties: false
    JsonNode:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/JsonNodeOptions'
        parent:
          $ref: '#/components/schemas/JsonNode'
        root:
          $ref: '#/components/schemas/JsonNode'
      additionalProperties: false
    JsonNodeOptions:
      type: object
      properties:
        propertyNameCaseInsensitive:
          type: boolean
      additionalProperties: false
    JsonPatch:
      type: object
      properties:
        operations:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PatchOperation'
      additionalProperties: false
    JsonPointer:
      type: object
      properties:
        source:
          type: string
          nullable: true
          readOnly: true
        segments:
          type: array
          nullable: true
          readOnly: true
          items:
            $ref: '#/components/schemas/PointerSegment'
        isUriEncoded:
          type: boolean
          readOnly: true
        kind:
          $ref: '#/components/schemas/JsonPointerKind'
      additionalProperties: false
    JsonPointerKind:
      type: string
      enum:
      - unspecified
      - plain
      - uriEncoded
    MeModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
          readOnly: true
        fullName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      example:
        fullName: fullName
        email: email
    MemberModel:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        productId:
          type: string
          format: uuid
        permissionGroupId:
          type: integer
          format: int64
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
      example:
        permissionGroupId: 0
        productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fullName: fullName
        userId: userId
        email: email
    OperationType:
      type: string
      enum:
      - unknown
      - add
      - remove
      - replace
      - move
      - copy
      - test
    OrganizationModel:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
    OrganizationModel-haljson:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__embedded_organization__links'
    PatchOperation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/OperationType'
        from:
          $ref: '#/components/schemas/JsonPointer'
        path:
          $ref: '#/components/schemas/JsonPointer'
        value:
          $ref: '#/components/schemas/JsonNode'
      additionalProperties: false
    PermissionGroupModel:
      type: object
      properties:
        permissionGroupId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        canManageMembers:
          type: boolean
        canCreateOrUpdateConfig:
          type: boolean
        canDeleteConfig:
          type: boolean
        canCreateOrUpdateEnvironment:
          type: boolean
        canDeleteEnvironment:
          type: boolean
        canCreateOrUpdateSetting:
          type: boolean
        canTagSetting:
          type: boolean
        canDeleteSetting:
          type: boolean
        canCreateOrUpdateTag:
          type: boolean
        canDeleteTag:
          type: boolean
        canManageWebhook:
          type: boolean
        canUseExportImport:
          type: boolean
        canManageProductPreferences:
          type: boolean
        canManageIntegrations:
          type: boolean
        canViewSdkKey:
          type: boolean
        canRotateSdkKey:
          type: boolean
        canCreateOrUpdateSegments:
          type: boolean
        canDeleteSegments:
          type: boolean
        canViewProductAuditLog:
          type: boolean
        canViewProductStatistics:
          type: boolean
        accessType:
          $ref: '#/components/schemas/AccessType'
        newEnvironmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
        environmentAccesses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EnvironmentAccessModel'
        product:
          $ref: '#/components/schemas/ProductModel'
      additionalProperties: false
      example:
        canViewProductStatistics: true
        canDeleteTag: true
        environmentAccesses:
        - environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          color: color
          environmentAccessType: null
          name: name
          description: description
          order: 6
          reasonRequired: true
        - environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          color: color
          environmentAccessType: null
          name: name
          description: description
          order: 6
          reasonRequired: true
        canManageProductPreferences: true
        canManageIntegrations: true
        canDeleteSegments: true
        accessType: readOnly
        canManageMembers: true
        canManageWebhook: true
        canUseExportImport: true
        canViewSdkKey: true
        canDeleteSetting: true
        canRotateSdkKey: true
        canCreateOrUpdateSegments: true
        canCreateOrUpdateSetting: true
        permissionGroupId: 0
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        canDeleteConfig: true
        canDeleteEnvironment: true
        canCreateOrUpdateConfig: true
        canTagSetting: true
        canCreateOrUpdateEnvironment: true
        name: name
        canViewProductAuditLog: true
        canCreateOrUpdateTag: true
        newEnvironmentAccessType: full
    PermissionGroupModel-haljson:
      type: object
      properties:
        permissionGroupId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        canManageMembers:
          type: boolean
        canCreateOrUpdateConfig:
          type: boolean
        canDeleteConfig:
          type: boolean
        canCreateOrUpdateEnvironment:
          type: boolean
        canDeleteEnvironment:
          type: boolean
        canCreateOrUpdateSetting:
          type: boolean
        canTagSetting:
          type: boolean
        canDeleteSetting:
          type: boolean
        canCreateOrUpdateTag:
          type: boolean
        canDeleteTag:
          type: boolean
        canManageWebhook:
          type: boolean
        canUseExportImport:
          type: boolean
        canManageProductPreferences:
          type: boolean
        canManageIntegrations:
          type: boolean
        canViewSdkKey:
          type: boolean
        canRotateSdkKey:
          type: boolean
        canCreateOrUpdateSegments:
          type: boolean
        canDeleteSegments:
          type: boolean
        canViewProductAuditLog:
          type: boolean
        canViewProductStatistics:
          type: boolean
        accessType:
          $ref: '#/components/schemas/AccessType'
        newEnvironmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
        environmentAccesses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EnvironmentAccessModel'
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    PointerSegment:
      type: object
      properties:
        source:
          type: string
          nullable: true
          readOnly: true
        value:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ProductModel:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationModel'
        productId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
      additionalProperties: false
      example:
        productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organization:
          organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        name: name
        description: description
        order: 1
        reasonRequired: true
    ProductModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__embedded'
        productId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__links'
    ReferenceLine:
      required:
      - lineNumber
      type: object
      properties:
        lineText:
          maxLength: 1000
          minLength: 0
          type: string
          description: The content of the reference line.
          nullable: true
        lineNumber:
          type: integer
          description: The line number of the reference line.
          format: int32
      additionalProperties: false
    ReferenceLines:
      required:
      - file
      - referenceLine
      type: object
      properties:
        file:
          maxLength: 255
          minLength: 0
          type: string
          description: The file's name in where the code reference has been found.
            (Appears on the ConfigCat Dashboard)
        fileUrl:
          maxLength: 1000
          minLength: 0
          type: string
          description: The file's url. (Used to point to the file on the repository's
            website)
          nullable: true
        preLines:
          type: array
          description: The lines before the actual reference line.
          nullable: true
          items:
            $ref: '#/components/schemas/ReferenceLine'
        postLines:
          type: array
          description: The lines after the actual reference line.
          nullable: true
          items:
            $ref: '#/components/schemas/ReferenceLine'
        referenceLine:
          $ref: '#/components/schemas/ReferenceLine'
      additionalProperties: false
    RolloutPercentageItemModel:
      required:
      - percentage
      type: object
      properties:
        percentage:
          type: integer
          description: The percentage value for the rule.
          format: int64
        value:
          description: The value to serve when the user falls in the percentage rule.
            It must respect the setting type.
          nullable: true
      additionalProperties: false
      example:
        percentage: 0
        value: ""
    RolloutRuleComparator:
      type: string
      enum:
      - isOneOf
      - isNotOneOf
      - contains
      - doesNotContain
      - semVerIsOneOf
      - semVerIsNotOneOf
      - semVerLess
      - semVerLessOrEquals
      - semVerGreater
      - semVerGreaterOrEquals
      - numberEquals
      - numberDoesNotEqual
      - numberLess
      - numberLessOrEquals
      - numberGreater
      - numberGreaterOrEquals
      - sensitiveIsOneOf
      - sensitiveIsNotOneOf
    RolloutRuleModel:
      type: object
      properties:
        comparisonAttribute:
          maxLength: 1000
          minLength: 0
          type: string
          description: The user attribute to compare.
          nullable: true
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          maxLength: 65535
          minLength: 0
          type: string
          description: The value to compare against.
          nullable: true
        value:
          description: The value to serve when the comparison matches. It must respect
            the setting type.
          nullable: true
        segmentComparator:
          $ref: '#/components/schemas/SegmentComparator'
        segmentId:
          type: string
          description: The segment to compare against.
          format: uuid
          nullable: true
      additionalProperties: false
      example:
        comparator: isOneOf
        comparisonValue: comparisonValue
        segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        segmentComparator: isIn
        value: ""
        comparisonAttribute: comparisonAttribute
    SdkKeysModel:
      type: object
      properties:
        primary:
          type: string
          nullable: true
        secondary:
          type: string
          nullable: true
      additionalProperties: false
      example:
        secondary: secondary
        primary: primary
    SegmentComparator:
      type: string
      enum:
      - isIn
      - isNotIn
    SegmentListModel:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        segmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        lastUpdaterEmail:
          type: string
          nullable: true
        lastUpdaterFullName:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
        usage:
          type: integer
          format: int32
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        lastUpdaterEmail: lastUpdaterEmail
        creatorEmail: creatorEmail
        segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        usage: 0
        name: name
        description: description
        creatorFullName: creatorFullName
        lastUpdaterFullName: lastUpdaterFullName
        updatedAt: 2000-01-23T04:56:07.000+00:00
    SegmentListModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        segmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        lastUpdaterEmail:
          type: string
          nullable: true
        lastUpdaterFullName:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
        usage:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SegmentModel:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        segmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        lastUpdaterEmail:
          type: string
          nullable: true
        lastUpdaterFullName:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
        comparisonAttribute:
          type: string
          nullable: true
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          type: string
          nullable: true
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        comparisonValue: comparisonValue
        creatorEmail: creatorEmail
        description: description
        createdAt: 2000-01-23T04:56:07.000+00:00
        comparator: isOneOf
        lastUpdaterEmail: lastUpdaterEmail
        segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        creatorFullName: creatorFullName
        lastUpdaterFullName: lastUpdaterFullName
        comparisonAttribute: comparisonAttribute
        updatedAt: 2000-01-23T04:56:07.000+00:00
    SegmentModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        segmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        lastUpdaterEmail:
          type: string
          nullable: true
        lastUpdaterFullName:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
        comparisonAttribute:
          type: string
          nullable: true
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingDataModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        hint:
          type: string
          nullable: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        order:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        isWatching:
          type: boolean
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        creatorEmail: creatorEmail
        hint: hint
        name: name
        creatorFullName: creatorFullName
        isWatching: true
        settingType: boolean
        key: key
        settingId: 6
        order: 1
    SettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        hint:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        settingType:
          $ref: '#/components/schemas/SettingType'
        configId:
          type: string
          format: uuid
        configName:
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TagModel'
      additionalProperties: false
      example:
        configName: configName
        configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hint: hint
        name: name
        settingType: boolean
        key: key
        settingId: 0
        order: 6
        tags:
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          color: color
          tagId: 5
          name: name
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          color: color
          tagId: 5
          name: name
    SettingModel-haljson:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        hint:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        settingType:
          $ref: '#/components/schemas/SettingType'
        configId:
          type: string
          format: uuid
        configName:
          type: string
          nullable: true
        _embedded:
          $ref: '#/components/schemas/SettingModelhaljson__embedded'
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingTagModel:
      type: object
      properties:
        settingTagId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      example:
        color: color
        tagId: 5
        name: name
        settingTagId: 5
    SettingType:
      type: string
      enum:
      - boolean
      - string
      - int
      - double
    SettingValueModel:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          description: The value to serve. It must respect the setting type.
          nullable: true
        setting:
          $ref: '#/components/schemas/SettingDataModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdaterUserEmail:
          type: string
          nullable: true
        lastUpdaterUserFullName:
          type: string
          nullable: true
        integrationLinks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/IntegrationLinkModel'
        settingTags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SettingTagModel'
        config:
          $ref: '#/components/schemas/ConfigModel'
        environment:
          $ref: '#/components/schemas/EnvironmentModel'
        readOnly:
          type: boolean
      additionalProperties: false
      example:
        rolloutRules:
        - comparator: isOneOf
          comparisonValue: comparisonValue
          segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          segmentComparator: isIn
          value: ""
          comparisonAttribute: comparisonAttribute
        - comparator: isOneOf
          comparisonValue: comparisonValue
          segmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          segmentComparator: isIn
          value: ""
          comparisonAttribute: comparisonAttribute
        rolloutPercentageItems:
        - percentage: 0
          value: ""
        - percentage: 0
          value: ""
        environment:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          color: color
          name: name
          description: description
          order: 0
          reasonRequired: true
        lastUpdaterUserEmail: lastUpdaterUserEmail
        readOnly: true
        value: ""
        integrationLinks:
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        config:
          product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
            description: description
            order: 1
            reasonRequired: true
          configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          description: description
          migratedConfigId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          evaluationVersion: v1
          order: 0
        settingTags:
        - color: color
          tagId: 5
          name: name
          settingTagId: 5
        - color: color
          tagId: 5
          name: name
          settingTagId: 5
        setting:
          createdAt: 2000-01-23T04:56:07.000+00:00
          creatorEmail: creatorEmail
          hint: hint
          name: name
          creatorFullName: creatorFullName
          isWatching: true
          settingType: boolean
          key: key
          settingId: 6
          order: 1
        updatedAt: 2000-01-23T04:56:07.000+00:00
        lastUpdaterUserFullName: lastUpdaterUserFullName
    SettingValueModel-haljson:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          description: The value to serve. It must respect the setting type.
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdaterUserEmail:
          type: string
          nullable: true
        lastUpdaterUserFullName:
          type: string
          nullable: true
        _embedded:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded'
        readOnly:
          type: boolean
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    TagModel:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
          description: description
          order: 1
          reasonRequired: true
        color: color
        tagId: 5
        name: name
    TagModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    UpdateConfigRequest:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UpdateEnvironmentModel:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UpdatePermissionGroupRequest:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        canManageMembers:
          type: boolean
          nullable: true
        canCreateOrUpdateConfig:
          type: boolean
          nullable: true
        canDeleteConfig:
          type: boolean
          nullable: true
        canCreateOrUpdateEnvironment:
          type: boolean
          nullable: true
        canDeleteEnvironment:
          type: boolean
          nullable: true
        canCreateOrUpdateSetting:
          type: boolean
          nullable: true
        canTagSetting:
          type: boolean
          nullable: true
        canDeleteSetting:
          type: boolean
          nullable: true
        canCreateOrUpdateTag:
          type: boolean
          nullable: true
        canDeleteTag:
          type: boolean
          nullable: true
        canManageWebhook:
          type: boolean
          nullable: true
        canUseExportImport:
          type: boolean
          nullable: true
        canManageProductPreferences:
          type: boolean
          nullable: true
        canManageIntegrations:
          type: boolean
          nullable: true
        canViewSdkKey:
          type: boolean
          nullable: true
        canRotateSdkKey:
          type: boolean
          nullable: true
        canViewProductStatistics:
          type: boolean
          nullable: true
        canViewProductAuditLog:
          type: boolean
          nullable: true
        canCreateOrUpdateSegments:
          type: boolean
          nullable: true
        canDeleteSegments:
          type: boolean
          nullable: true
        accessType:
          $ref: '#/components/schemas/AccessType'
        newEnvironmentAccessType:
          $ref: '#/components/schemas/EnvironmentAccessType'
        environmentAccesses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CreateOrUpdateEnvironmentAccessModel'
      additionalProperties: false
    UpdateProductRequest:
      type: object
      properties:
        name:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UpdateSegmentModel:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        description:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        comparisonAttribute:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          maxLength: 65535
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UpdateSettingValueModel:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          description: The value to serve. It must respect the setting type.
          nullable: true
      additionalProperties: false
    UpdateSettingValueWithSettingIdModel:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          description: The value to serve. It must respect the setting type.
          nullable: true
        settingId:
          type: integer
          description: The id of the Setting.
          format: int32
      additionalProperties: false
    UpdateSettingValuesWithIdModel:
      type: object
      properties:
        settingValues:
          type: array
          description: The values to update.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateSettingValueWithSettingIdModel'
      additionalProperties: false
    UpdateTagModel:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UserModel:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
      example:
        fullName: fullName
        userId: userId
        email: email
    auditLogType:
      nullable: true
      allOf:
      - $ref: '#/components/schemas/AuditLogType'
    auditLogType_1:
      nullable: true
      allOf:
      - $ref: '#/components/schemas/AuditLogType'
    ConfigModelhaljson__embedded_product__embedded_organization__links:
      type: object
      properties:
        products:
          type: string
        members:
          type: string
    ConfigModelhaljson__embedded_product__embedded_organization:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__embedded_organization__links'
    ConfigModelhaljson__embedded_product__embedded:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__embedded_organization'
    ConfigModelhaljson__embedded_product__links:
      type: object
      properties:
        self:
          type: string
        configs:
          type: string
        environments:
          type: string
        tags:
          type: string
        permission-groups:
          type: string
        members:
          type: string
        segments:
          type: string
    ConfigModelhaljson__embedded_product:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__embedded'
        productId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product__links'
    ConfigModelhaljson__embedded:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded_product'
    ConfigModelhaljson__links:
      type: object
      properties:
        self:
          type: string
        settings:
          type: string
    EnvironmentModelhaljson__links:
      type: object
      properties:
        self:
          type: string
    SettingModelhaljson__embedded_tags:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingModelhaljson__embedded:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SettingModelhaljson__embedded_tags'
    SettingValueModelhaljson__embedded_setting:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        hint:
          type: string
          nullable: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        order:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        creatorEmail:
          type: string
          nullable: true
        creatorFullName:
          type: string
          nullable: true
        isWatching:
          type: boolean
      additionalProperties: false
    SettingValueModelhaljson__embedded_config:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        migratedConfigId:
          type: string
          format: uuid
          nullable: true
        evaluationVersion:
          $ref: '#/components/schemas/EvaluationVersion'
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__links'
    SettingValueModelhaljson__embedded_environment:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ConfigModelhaljson__embedded'
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        order:
          type: integer
          format: int32
        reasonRequired:
          type: boolean
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingValueModelhaljson__embedded_integrationLinks:
      type: object
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        integrationLinkType:
          $ref: '#/components/schemas/IntegrationLinkType'
        url:
          type: string
          nullable: true
      additionalProperties: false
    SettingValueModelhaljson__embedded_settingTags:
      type: object
      properties:
        settingTagId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
    SettingValueModelhaljson__embedded:
      type: object
      properties:
        setting:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_setting'
        config:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_config'
        environment:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_environment'
        integrationLinks:
          type: array
          items:
            $ref: '#/components/schemas/SettingValueModelhaljson__embedded_integrationLinks'
        settingTags:
          type: array
          items:
            $ref: '#/components/schemas/SettingValueModelhaljson__embedded_settingTags'
  securitySchemes:
    Basic:
      type: http
      description: |-
        To authenticate with the API you have to fill the `Authorization` HTTP request header with your Public API credentials.

        You can create your credentials on the <a target="_blank" href="https://app.configcat.com/my-account/public-api-credentials">Public API credentials management page</a>.
      scheme: basic
x-tagGroups:
- name: Feature Flag values
  tags:
  - Feature Flag & Setting values using SDK Key
  - Feature Flag & Setting values
- name: Feature Flag metadata
  tags:
  - Feature Flags & Settings
  - Tags
- name: General
  tags:
  - Products
  - Configs
  - Environments
  - Segments
  - SDK Keys
  - Code References
- name: Membership
  tags:
  - Organizations
  - Members
  - Permission Groups
- name: Diagnostics
  tags:
  - Audit logs
  - Me
