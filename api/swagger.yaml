openapi: 3.0.1
info:
  title: ConfigCat Public Management API
  description: "**Base API URL**: https://localhost\r\n\r\nIf you prefer the swagger\
    \ documentation, you can find it here: [Swagger UI](https://api.configcat.com/swagger).\r\
    \n\r\nThe purpose of this API is to access the ConfigCat platform programmatically.\
    \ \r\nYou can **Create**, **Read**, **Update** and **Delete** any entities like\
    \ **Feature Flags, Configs, Environments** or **Products** within ConfigCat. \r\
    \n\r\nThe API is based on HTTP REST, uses resource-oriented URLs, status codes\
    \ and supports JSON \r\nand JSON+HAL format. Do not use this API for accessing\
    \ and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).\r\
    \n\r\n\r\n# OpenAPI Specification\r\n\r\nThe complete specification is publicly\
    \ available here: [swagger.json](v1/swagger.json). \r\nYou can use it to generate\
    \ client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator)\
    \ or\r\n[Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact\
    \ with this API.\r\n\r\n# Authentication\r\nThis API uses the [Basic HTTP Authentication\
    \ Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication). \r\n\r\n\
    <!-- ReDoc-Inject: <security-definitions> -->\r\n\r\n# Throttling and rate limits\r\
    \nAll the rate limited API calls are returning information about the current rate\
    \ limit period in the following HTTP headers:\r\n\r\n| Header | Description |\r\
    \n| :- | :- |\r\n| X-Rate-Limit-Remaining | The maximum number of requests remaining\
    \ in the current rate limit period. |\r\n| X-Rate-Limit-Reset     | The time\t\
    when the current rate limit period resets.\t\t\t\t\t\t  |\r\n\r\nWhen the rate\
    \ limit is exceeded by a request, the API returns with a `HTTP 429 - Too many\
    \ requests` status along with a `Retry-After` HTTP header.\r\n"
  termsOfService: https://configcat.com/termsofserviceagreement
  contact:
    name: ConfigCat
    url: https://configcat.com
    email: support@configcat.com
  version: v1
  x-logo:
    url: https://localhost/resources/configcat-logo-horiz.svg
servers:
- url: https://localhost
security:
- Basic: []
tags:
- name: Feature Flag & Setting values using SDK Key
  description: "With these endpoints you can control how your existing Feature Flags\
    \ and Settings should serve their values. \r\nYou can turn Feature Flags on or\
    \ off, update Setting values and also add, remove or change the order of Percentage\
    \ and Targeting Rules.\r\n\r\nThese endpoints are determining the Environment\
    \ and Config by the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://app.configcat.com/sdkkey\"\
    >SDK key</a> passed in\r\nthe `X-CONFIGCAT-SDKKEY` request header. To identify\
    \ the desired Feature Flag or Setting to change, \r\nyou can use either its `settingId`\
    \ or `key` attribute. You can get those attributes \r\nfrom the [Feature Flag\
    \ & Setting](#tag/Feature-Flags-and-Settings) endpoints."
- name: Feature Flag & Setting values
  description: "With these endpoints you can control how your existing Feature Flags\
    \ and Settings should serve their values. \r\nYou can turn Feature Flags on or\
    \ off, update Setting values and also add, remove or reorder Percentage and Targeting\
    \ Rules.\r\n\r\nTo determine which Feature Flag or Setting you want to work with\
    \ you have to pass its `settingId`. It can be\r\nobtained from the [Feature Flag\
    \ & Setting](#tag/Feature-Flags-and-Settings) endpoints.\r\n\r\nYou also have\
    \ to specify in which Environment you want to change the served value configuration\
    \ by its\r\n`environmentId` which can be obtained from the [List Environments](#operation/get-environments)\
    \ endpoint."
- name: Feature Flags & Settings
  description: "With these endpoints you can manage your Feature Flags or Settings\
    \ within a Config. \r\nHowever you can't use them for manipulating the values\
    \ of your Feature Flags and Settings,\r\nto do that please visit the [Feature\
    \ Flag & Setting values using SDK Key](#tag/Feature-Flag-and-Setting-values-using-SDK-Key)\r\
    \nand [Feature Flag & Setting values](#tag/Feature-Flag-and-Setting-values) sections\
    \ of the API.\r\n\r\nFor using these endpoints, first you have to select which\
    \ Config you want to work with by its `configId` \r\nwhich can be obtained from\
    \ the [List Configs](#operation/get-configs) endpoint. \r\nThen you can use it\
    \ to create new Feature Flags or to get information about existing ones.\r\n\r\
    \nThen you can obtain the `settingId` or `key` of your desired Feature Flag or\
    \ Setting \r\nto use them for further operations in this API. \r\n\r\n<a href=\"\
    https://configcat.com/docs/main-concepts/#setting\" target=\"_blank\" rel=\"noopener\
    \ noreferrer\">Here</a> you can read more about the concept of Settings."
- name: Organizations
  description: "With these endpoints you can get useful information about your Organizations.\r\
    \nThis also can be used to manage your [Products](#tag/Products).\r\n\r\n<a href=\"\
    https://configcat.com/docs/organization/\" target=\"_blank\" rel=\"noopener noreferrer\"\
    >Here</a> you can read more about the Organizations."
- name: Products
  description: "With these endpoints you can get useful information about your Products.\r\
    \nThis also can be used to manage [Environments](#tag/Environments) and [Configs](#tag/Configs)\
    \ through this API.\r\n\r\n<a href=\"https://configcat.com/docs/main-concepts/#product\"\
    \ target=\"_blank\" rel=\"noopener noreferrer\">Here</a> you can read more about\
    \ the concept of Products."
- name: Configs
  description: "With these endpoints you can get useful information about your Configs.\r\
    \nThis also can be used to manage [Feature Flags and Settings](#tag/Feature-Flags-and-Settings)\
    \ and their \r\n[served values](#tag/Feature-Flag-and-Setting-values) through\
    \ this API.\r\n\r\n<a href=\"https://configcat.com/docs/main-concepts/#config\"\
    \ target=\"_blank\" rel=\"noopener noreferrer\">Here</a> you can read more about\
    \ the concept of Configs."
- name: Environments
  description: "With these endpoints you can update existing Environments or add new\
    \ ones into your selected [Product](#tag/Products). \r\n\r\n<a href=\"https://configcat.com/docs/main-concepts/#environment\"\
    \ target=\"_blank\" rel=\"noopener noreferrer\">Here</a> you can read more about\
    \ the concept of Environments."
- name: Tags
  description: With these endpoints you can manage your Tags.
- name: Audit logs
  description: Access audit log entries.
- name: Me
  description: Information about the current user.
paths:
  /v1/products/{productId}/auditlogs:
    get:
      tags:
      - Audit logs
      summary: List Audit logs
      description: "This endpoint returns the list of Audit logs for a given Product\
        \ \r\nand the result can be optionally filtered by Config and/or Environment."
      operationId: get-auditlogs
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: configId
        in: query
        description: The identifier of the Config.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
          nullable: true
      - name: environmentId
        in: query
        description: The identifier of the Environment.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
          nullable: true
      - name: auditLogType
        in: query
        description: Filter Audit logs by Audit log type.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/auditLogType'
      - name: fromUtcDateTime
        in: query
        description: Filter Audit logs by starting UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: toUtcDateTime
        in: query
        description: Filter Audit logs by ending UTC date.
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogItemModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/configs:
    get:
      tags:
      - Configs
      summary: List Configs
      description: "This endpoint returns the list of the Configs that belongs to\
        \ the given Product identified by the\r\n`productId` parameter, which can\
        \ be obtained from the [List Products](#operation/get-products) endpoint."
      operationId: get-configs
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Configs
      summary: Create Config
      description: "This endpoint creates a new Config in a specified Product \r\n\
        identified by the `productId` parameter, which can be obtained from the [List\
        \ Products](#operation/get-products) endpoint."
      operationId: create-config
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateConfigRequest'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}:
    get:
      tags:
      - Configs
      summary: Get Config
      description: "This endpoint returns the metadata of a Config\r\nidentified by\
        \ the `configId`."
      operationId: get-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: When everything is ok, the config data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Configs
      summary: Update Config
      description: This endpoint updates a Config identified by the `configId` parameter.
      operationId: update-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateConfigRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConfigModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Configs
      summary: Delete Config
      description: This endpoint removes a Config identified by the `configId` parameter.
      operationId: delete-config
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/environments:
    get:
      tags:
      - Environments
      summary: List Environments
      description: "This endpoint returns the list of the Environments that belongs\
        \ to the given Product identified by the\r\n`productId` parameter, which can\
        \ be obtained from the [List Products](#operation/get-products) endpoint."
      operationId: get-environments
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Environments
      summary: Create Environment
      description: "This endpoint creates a new Environment in a specified Product\
        \ \r\nidentified by the `productId` parameter, which can be obtained from\
        \ the [List Products](#operation/get-products) endpoint."
      operationId: create-environment
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}:
    get:
      tags:
      - Environments
      summary: Get Environment
      description: "This endpoint returns the metadata of an Environment \r\nidentified\
        \ by the `environmentId`."
      operationId: get-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: When everything is ok, the environment data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Environments
      summary: Update Environment
      description: This endpoint updates an Environment identified by the `environmentId`
        parameter.
      operationId: update-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironmentModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EnvironmentModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Environments
      summary: Delete Environment
      description: This endpoint removes an Environment identified by the `environmentId`
        parameter.
      operationId: delete-environment
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}/settings/{settingId}/value:
    get:
      tags:
      - Feature Flag & Setting values
      summary: Get value
      description: "This endpoint returns the value of a Feature Flag or Setting \r\
        \nin a specified Environment identified by the `environmentId` parameter.\r\
        \n\r\nThe most important attributes in the response are the `value`, `rolloutRules`\
        \ and `percentageRules`.\r\nThe `value` represents what the clients will get\
        \ when the evaluation requests of our SDKs \r\nare not matching to any of\
        \ the defined Targeting or Percentage Rules, or when there are no additional\
        \ rules to evaluate.\r\n\r\nThe `rolloutRules` and `percentageRules` attributes\
        \ are representing the current \r\nTargeting and Percentage Rules configuration\
        \ of the actual Feature Flag or Setting \r\nin an **ordered** collection,\
        \ which means the order of the returned rules is matching to the\r\nevaluation\
        \ order. You can read more about these rules [here](https://configcat.com/docs/advanced/targeting/)."
      operationId: get-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: When everything is ok, the setting value data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Feature Flag & Setting values
      summary: Replace value
      description: "This endpoint replaces the whole value of a Feature Flag or Setting\
        \ in a specified Environment.\r\n\r\nOnly the `value`, `rolloutRules` and\
        \ `percentageRules` attributes are modifiable by this endpoint.\r\n\r\n**Important:**\
        \ As this endpoint is doing a complete replace, it's important to set every\
        \ other attribute that you don't \r\nwant to change in its original state.\
        \ Not listing one means that it will reset.\r\n\r\nFor example: We have the\
        \ following resource.\r\n```\r\n{\r\n\t\"rolloutPercentageItems\": [\r\n\t\
        \t{\r\n\t\t\t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t},\r\n\t\t\
        {\r\n\t\t\t\"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t}\r\n\t],\r\
        \n\t\"rolloutRules\": [],\r\n\t\"value\": false\r\n}\r\n```\r\nIf we send\
        \ a replace request body as below:\r\n```\r\n{\r\n\t\"value\": true\r\n}\r\
        \n```\r\nThen besides that the default value is set to `true`, all the Percentage\
        \ Rules are deleted. \r\nSo we get a response like this:\r\n```\r\n{\r\n\t\
        \"rolloutPercentageItems\": [],\r\n\t\"rolloutRules\": [],\r\n\t\"value\"\
        : true\r\n}\r\n```"
      operationId: replace-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flag & Setting values
      summary: Update value
      description: "This endpoint updates the value of a Feature Flag or Setting \r\
        \nwith a collection of [JSON Patch](http://jsonpatch.com) operations in a\
        \ specified Environment.\r\n\r\nOnly the `value`, `rolloutRules` and `percentageRules`\
        \ attributes are modifiable by this endpoint.\r\n\r\nThe advantage of using\
        \ JSON Patch is that you can describe individual update operations on a resource\r\
        \nwithout touching attributes that you don't want to change. It supports collection\
        \ reordering, so it also \r\ncan be used for reordering the targeting rules\
        \ of a Feature Flag or Setting.\r\n\r\nFor example: We have the following\
        \ resource.\r\n```\r\n{\r\n\t\"rolloutPercentageItems\": [\r\n\t\t{\r\n\t\t\
        \t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t},\r\n\t\t{\r\n\t\t\t\
        \"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t}\r\n\t],\r\n\t\"rolloutRules\"\
        : [],\r\n\t\"value\": false\r\n}\r\n```\r\nIf we send an update request body\
        \ as below:\r\n```\r\n[\r\n\t{\r\n\t\t\"op\": \"replace\",\r\n\t\t\"path\"\
        : \"/value\",\r\n\t\t\"value\": true\r\n\t}\r\n]\r\n```\r\nOnly the default\
        \ value is going to be set to `true` and all the Percentage Rules are remaining\
        \ unchanged.\r\nSo we get a response like this:\r\n```\r\n{\r\n\t\"rolloutPercentageItems\"\
        : [\r\n\t\t{\r\n\t\t\t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t\
        },\r\n\t\t{\r\n\t\t\t\"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t\
        }\r\n\t],\r\n\t\"rolloutRules\": [],\r\n\t\"value\": true\r\n}\r\n```"
      operationId: update-setting-value
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
        required: true
      responses:
        "200":
          description: When the patch was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/settings/{settingKeyOrId}/value:
    get:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Get value
      description: "This endpoint returns the value of a Feature Flag or Setting \r\
        \nin a specified Environment identified by the <a target=\"_blank\" rel=\"\
        noopener noreferrer\" href=\"https://app.configcat.com/sdkkey\">SDK key</a>\
        \ passed in the `X-CONFIGCAT-SDKKEY` header.\r\n\r\nThe most important attributes\
        \ in the response are the `value`, `rolloutRules` and `percentageRules`.\r\
        \nThe `value` represents what the clients will get when the evaluation requests\
        \ of our SDKs \r\nare not matching to any of the defined Targeting or Percentage\
        \ Rules, or when there are no additional rules to evaluate.\r\n\r\nThe `rolloutRules`\
        \ and `percentageRules` attributes are representing the current \r\nTargeting\
        \ and Percentage Rules configuration of the actual Feature Flag or Setting\
        \ \r\nin an **ordered** collection, which means the order of the returned\
        \ rules is matching to the\r\nevaluation order. You can read more about these\
        \ rules [here](https://configcat.com/docs/advanced/targeting/)."
      operationId: get-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Replace value
      description: "This endpoint replaces the value of a Feature Flag or Setting\
        \ \r\nin a specified Environment identified by the <a target=\"_blank\" rel=\"\
        noopener noreferrer\" href=\"https://app.configcat.com/sdkkey\">SDK key</a>\
        \ passed in the `X-CONFIGCAT-SDKKEY` header.\r\n\r\nOnly the `value`, `rolloutRules`\
        \ and `percentageRules` attributes are modifiable by this endpoint.\r\n\r\n\
        **Important:** As this endpoint is doing a complete replace, it's important\
        \ to set every other attribute that you don't \r\nwant to change to its original\
        \ state. Not listing one means that it will reset.\r\n\r\nFor example: We\
        \ have the following resource.\r\n```\r\n{\r\n\t\"rolloutPercentageItems\"\
        : [\r\n\t\t{\r\n\t\t\t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t\
        },\r\n\t\t{\r\n\t\t\t\"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t\
        }\r\n\t],\r\n\t\"rolloutRules\": [],\r\n\t\"value\": false\r\n}\r\n```\r\n\
        If we send a replace request body as below:\r\n```\r\n{\r\n\t\"value\": true\r\
        \n}\r\n```\r\nThen besides that the default served value is set to `true`,\
        \ all the Percentage Rules are deleted. \r\nSo we get a response like this:\r\
        \n```\r\n{\r\n\t\"rolloutPercentageItems\": [],\r\n\t\"rolloutRules\": [],\r\
        \n\t\"value\": true\r\n}\r\n```"
      operationId: replace-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSettingValueModel'
            examples:
              simple:
                description: This example turns on a feature flag.
                value:
                  value: true
              advanced:
                description: This example turns on a feature flag and adds two items
                  to its percentage evaluation rules.
                value:
                  value: true
                  rolloutPercentageItems:
                  - percentage: 30
                    value: true
                  - percentage: 70
                    value: false
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flag & Setting values using SDK Key
      summary: Update value
      description: "This endpoint updates the value of a Feature Flag or Setting \r\
        \nwith a collection of [JSON Patch](http://jsonpatch.com) operations in a\
        \ specified Environment\r\nidentified by the <a target=\"_blank\" rel=\"noopener\
        \ noreferrer\" href=\"https://app.configcat.com/sdkkey\">SDK key</a> passed\
        \ in the `X-CONFIGCAT-SDKKEY` header.\r\n\r\nOnly the `value`, `rolloutRules`\
        \ and `percentageRules` attributes are modifiable by this endpoint.\r\n\r\n\
        The advantage of using JSON Patch is that you can describe individual update\
        \ operations on a resource\r\nwithout touching attributes that you don't want\
        \ to change. It supports collection reordering, so it also \r\ncan be used\
        \ for reordering the targeting rules of a Feature Flag or Setting.\r\n\r\n\
        For example: We have the following resource.\r\n```\r\n{\r\n\t\"rolloutPercentageItems\"\
        : [\r\n\t\t{\r\n\t\t\t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t\
        },\r\n\t\t{\r\n\t\t\t\"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t\
        }\r\n\t],\r\n\t\"rolloutRules\": [],\r\n\t\"value\": false\r\n}\r\n```\r\n\
        If we send an update request body as below:\r\n```\r\n[\r\n\t{\r\n\t\t\"op\"\
        : \"replace\",\r\n\t\t\"path\": \"/value\",\r\n\t\t\"value\": true\r\n\t}\r\
        \n]\r\n```\r\nOnly the default served value is going to be set to `true` and\
        \ all the Percentage Rules are remaining unchanged.\r\nSo we get a response\
        \ like this:\r\n```\r\n{\r\n\t\"rolloutPercentageItems\": [\r\n\t\t{\r\n\t\
        \t\t\"percentage\": 30,\r\n\t\t\t\"value\": true\r\n\t\t},\r\n\t\t{\r\n\t\t\
        \t\"percentage\": 70,\r\n\t\t\t\"value\": false\r\n\t\t}\r\n\t],\r\n\t\"rolloutRules\"\
        : [],\r\n\t\"value\": true\r\n}\r\n```"
      operationId: update-setting-value-by-sdkkey
      parameters:
      - name: settingKeyOrId
        in: path
        description: The key or id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reason
        in: query
        description: The reason note for the Audit Log if the Product's "Config changes
          require a reason" preference is turned on.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: X-CONFIGCAT-SDKKEY
        in: header
        description: The ConfigCat SDK Key. (https://app.configcat.com/sdkkey)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
            examples:
              turn on a feature flag:
                description: This example turns on a feature flag.
                value:
                - op: replace
                  path: /value
                  value: true
              add percentage rules:
                description: This example adds two items to the percentage evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 30
                    value: true
                - op: add
                  path: /rolloutPercentageItems/-
                  value:
                    percentage: 70
                    value: false
              add targeting rules:
                description: This example adds two items to the targeting evaluation
                  rules.
                value:
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: contains
                    comparisonValue: '@example.com'
                    value: true
                - op: add
                  path: /rolloutRules/-
                  value:
                    comparisonAttribute: Identifier
                    comparator: isOneOf
                    comparisonValue: '@blacklist.com'
                    value: false
              reorder targeting rules:
                description: This example swaps the first and the second targeting
                  evaluation rule.
                value:
                - op: move
                  path: /rolloutRules/1
                  from: /rolloutRules/0
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingValueModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingValueModel-haljson'
        "204":
          description: When no change applied on the resource.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/configs/{configId}/settings:
    get:
      tags:
      - Feature Flags & Settings
      summary: List Flags
      description: "This endpoint returns the list of the Feature Flags and Settings\
        \ defined in a \r\nspecified Config, identified by the `configId` parameter."
      operationId: get-settings
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Feature Flags & Settings
      summary: Create Flag
      description: "This endpoint creates a new Feature Flag or Setting in a specified\
        \ Config\r\nidentified by the `configId` parameter.\r\n\r\n**Important:**\
        \ The `key` attribute must be unique within the given Config."
      operationId: create-setting
      parameters:
      - name: configId
        in: path
        description: The identifier of the Config.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSettingModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSettingModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSettingModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/settings/{settingId}:
    get:
      tags:
      - Feature Flags & Settings
      summary: Get Flag
      description: "This endpoint returns the metadata attributes of a Feature Flag\
        \ or Setting \r\nidentified by the `settingId` parameter."
      operationId: get-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: When everything is ok, the setting data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Feature Flags & Settings
      summary: Delete Flag
      description: "This endpoint removes a Feature Flag or Setting from a specified\
        \ Config, \r\nidentified by the `configId` parameter."
      operationId: delete-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    patch:
      tags:
      - Feature Flags & Settings
      summary: Update Flag
      description: "This endpoint updates the metadata of a Feature Flag or Setting\
        \ \r\nwith a collection of [JSON Patch](http://jsonpatch.com) operations in\
        \ a specified Config.\r\n\r\nOnly the `name` and `hint` attributes are modifiable\
        \ by this endpoint.\r\n\r\nThe advantage of using JSON Patch is that you can\
        \ describe individual update operations on a resource\r\nwithout touching\
        \ attributes that you don't want to change.\r\n\r\nFor example: We have the\
        \ following resource.\r\n```\r\n{\r\n\t\"settingId\": 5345,\r\n\t\"key\":\
        \ \"myAwesomeFeature\",\r\n\t\"name\": \"Tihs is a naem with soem typos.\"\
        ,\r\n\t\"hint\": \"This Flag controls my awesome feature.\",\r\n\t\"settingType\"\
        : \"boolean\"\r\n}\r\n```\r\nIf we send an update request body as below:\r\
        \n```\r\n[\r\n\t{\r\n\t\t\"op\": \"replace\",\r\n\t\t\"path\": \"/name\",\r\
        \n\t\t\"value\": \"This is the name without typos.\"\r\n\t}\r\n]\r\n```\r\n\
        Only the name is going to be updated and all the other attributes are remaining\
        \ unchanged.\r\nSo we get a response like this:\r\n```\r\n{\r\n\t\"settingId\"\
        : 5345,\r\n\t\"key\": \"myAwesomeFeature\",\r\n\t\"name\": \"This is the name\
        \ without typos.\",\r\n\t\"hint\": \"This Flag controls my awesome feature.\"\
        ,\r\n\t\"settingType\": \"boolean\"\r\n}\r\n```"
      operationId: update-setting
      parameters:
      - name: settingId
        in: path
        description: The identifier of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
        required: true
      responses:
        "200":
          description: When the update was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SettingModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/integrationLink/{integrationLinkType}/{key}/details:
    get:
      tags:
      - Integration links
      summary: Get Integration link
      operationId: get-integration-link-details
      parameters:
      - name: integrationLinkType
        in: path
        description: The integration link's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: When everything is ok, the details for the integration link
            returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkDetailsModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkDetailsModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/environments/{environmentId}/settings/{settingId}/integrationLinks/{integrationLinkType}/{key}:
    post:
      tags:
      - Integration links
      summary: Add or update Integration link
      operationId: add-or-update-integration-link
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: integrationLinkType
        in: path
        description: The integration link's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddOrUpdateIntegrationLinkModel'
      responses:
        "200":
          description: When everything is ok, the integration link data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/IntegrationLinkModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Integration links
      summary: Delete Integration link
      operationId: delete-integration-link
      parameters:
      - name: environmentId
        in: path
        description: The identifier of the Environment.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: settingId
        in: path
        description: The id of the Setting.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: integrationLinkType
        in: path
        description: The integration's type.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/IntegrationLinkType'
      - name: key
        in: path
        description: The key of the integration link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: When everything is ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationLinkModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationLinkModel'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/me:
    get:
      tags:
      - Me
      summary: Get authenticated user details
      operationId: get-me
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MeModel'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations:
    get:
      tags:
      - Organizations
      summary: List Organizations
      description: This endpoint returns the list of the Organizations that belongs
        to the user.
      operationId: get-organizations
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products:
    get:
      tags:
      - Products
      summary: List Products
      description: This endpoint returns the list of the Products that belongs to
        the user.
      operationId: get-products
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/organizations/{organizationId}/products:
    post:
      tags:
      - Products
      summary: Create Product
      description: "This endpoint creates a new Product in a specified Organization\
        \ \r\nidentified by the `organizationId` parameter, which can be obtained\
        \ from the [List Organizations](#operation/get-organizations) endpoint."
      operationId: create-product
      parameters:
      - name: organizationId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}:
    get:
      tags:
      - Products
      summary: Get Product
      description: "This endpoint returns the metadata of a Product \r\nidentified\
        \ by the `productId`."
      operationId: get-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: When everything is ok, the product data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Products
      summary: Update Product
      description: This endpoint updates a Product identified by the `productId` parameter.
      operationId: update-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProductModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Products
      summary: Delete Product
      description: This endpoint removes a Product identified by the `productId` parameter.
      operationId: delete-product
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/products/{productId}/tags:
    get:
      tags:
      - Tags
      summary: List Tags
      description: "This endpoint returns the list of the Tags in a \r\nspecified\
        \ Product, identified by the `productId` parameter."
      operationId: get-tags
      parameters:
      - name: productId
        in: path
        description: The identifier of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagModel'
                x-content-type: application/json
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagModel-haljson'
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    post:
      tags:
      - Tags
      summary: Create Tag
      description: "This endpoint creates a new Tag in a specified Product \r\nidentified\
        \ by the `productId` parameter, which can be obtained from the [List Products](#operation/get-products)\
        \ endpoint."
      operationId: create-tag
      parameters:
      - name: productId
        in: path
        description: The identifier of the Organization.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTagModel'
        required: true
      responses:
        "201":
          description: When the creation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
  /v1/tags/{tagId}:
    get:
      tags:
      - Tags
      summary: Get Tag
      description: "This endpoint returns the metadata of a Tag \r\nidentified by\
        \ the `tagId`."
      operationId: get-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: When everything is ok, the tag data returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    put:
      tags:
      - Tags
      summary: Update Tag
      description: This endpoint updates a Tag identified by the `tagId` parameter.
      operationId: update-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTagModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagModel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TagModel-haljson'
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: This endpoint removes a Tag identified by the `tagId` parameter.
      operationId: delete-tag
      parameters:
      - name: tagId
        in: path
        description: The identifier of the Tag.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: When the delete was successful.
        "400":
          description: Bad request.
        "404":
          description: Not found.
        "401":
          description: Unauthorized. In case of the Public Management API credentials
            are invalid.
        "429":
          description: Too many requests. In case of the request rate exceeds the
            rate limits.
components:
  schemas:
    AuditLogType:
      type: string
      enum:
      - productCreated
      - productChanged
      - productOwnershipTransferred
      - productDeleted
      - teamMemberInvited
      - teamMemberInvitationRevoked
      - teamMemberJoined
      - teamMemberPermissionGroupChanged
      - teamMemberRemoved
      - teamMemberLeft
      - teamMemberInvitationChanged
      - teamMemberInvitationResent
      - teamMemberInvitationRejected
      - configCreated
      - configChanged
      - configDeleted
      - environmentCreated
      - environmentChanged
      - environmentDeleted
      - settingCreated
      - settingChanged
      - settingDeleted
      - settingValueChanged
      - webHookCreated
      - webHookChanged
      - webHookDeleted
      - subscriptionChanged
      - memberGroupCreated
      - memberGroupChanged
      - memberGroupDeleted
      - apiKeyAdded
      - apiKeyRemoved
      - integrationAdded
      - integrationChanged
      - integrationRemoved
      - apiKeyConnected
      - integrationLinkAdded
      - integrationLinkRemoved
      - organizationAdded
      - organizationRemoved
      - organizationChanged
      - organizationSubscriptionTypeChanged
      - organizationAdminAdded
      - organizationAdminChanged
      - organizationAdminRemoved
      - organizationAdminLeft
      - tagAdded
      - tagChanged
      - tagRemoved
      - settingTagAdded
      - settingTagRemoved
      - publicApiAccessTokenAdded
      - publicApiAccessTokenRemoved
    AuditLogItemModel:
      type: object
      properties:
        auditLogId:
          type: integer
          format: int64
        auditLogDateTime:
          type: string
          format: date-time
        auditLogType:
          type: string
          nullable: true
        userEmail:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        where:
          type: string
          nullable: true
        why:
          type: string
          nullable: true
        actionTarget:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
      additionalProperties: false
      example:
        auditLogDateTime: 2000-01-23T04:56:07.000+00:00
        auditLogType: auditLogType
        auditLogId: 0
        why: why
        userEmail: userEmail
        where: where
        details: details
        actionTarget: actionTarget
        userName: userName
    ConfigModel-haljson:
      type: object
      properties:
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__links'
    ConfigModel:
      type: object
      properties:
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
    CreateConfigRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
      additionalProperties: false
    UpdateConfigRequest:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    EnvironmentModel-haljson:
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    EnvironmentModel:
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
    CreateEnvironmentModel:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
      additionalProperties: false
    UpdateEnvironmentModel:
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    SettingType:
      type: string
      enum:
      - boolean
      - string
      - int
      - double
    SettingDataModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
          readOnly: true
        key:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        hint:
          type: string
          nullable: true
          readOnly: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        createdAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        creatorEmail:
          type: string
          nullable: true
          readOnly: true
        creatorFullName:
          type: string
          nullable: true
          readOnly: true
        ownerFullName:
          type: string
          nullable: true
        ownerEmail:
          type: string
          nullable: true
        expirationWarningAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        ownerFullName: ownerFullName
        creatorEmail: creatorEmail
        hint: hint
        name: name
        creatorFullName: creatorFullName
        expirationWarningAt: 2000-01-23T04:56:07.000+00:00
        settingType: boolean
        key: key
        settingId: 0
        ownerEmail: ownerEmail
    IntegrationLinkType:
      type: string
      enum:
      - trello
      - jira
    IntegrationLinkModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        integrationLinkType:
          $ref: '#/components/schemas/IntegrationLinkType'
        url:
          type: string
          nullable: true
      additionalProperties: false
      example:
        integrationLinkType: trello
        description: description
        key: key
        url: url
    SettingTagModel:
      type: object
      properties:
        settingTagId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      example:
        color: color
        tagId: 1
        name: name
        settingTagId: 6
    RolloutRuleComparator:
      type: string
      enum:
      - isOneOf
      - isNotOneOf
      - contains
      - doesNotContain
      - semVerIsOneOf
      - semVerIsNotOneOf
      - semVerLess
      - semVerLessOrEquals
      - semVerGreater
      - semVerGreaterOrEquals
      - numberEquals
      - numberDoesNotEqual
      - numberLess
      - numberLessOrEquals
      - numberGreater
      - numberGreaterOrEquals
      - sensitiveIsOneOf
      - sensitiveIsNotOneOf
    RolloutRuleModel:
      required:
      - comparisonAttribute
      - comparisonValue
      - value
      type: object
      properties:
        comparisonAttribute:
          maxLength: 1000
          minLength: 0
          type: string
          description: The user attribute to compare.
        comparator:
          $ref: '#/components/schemas/RolloutRuleComparator'
        comparisonValue:
          maxLength: 65535
          minLength: 0
          type: string
          description: The value to compare against.
        value:
          type: object
          additionalProperties: false
          description: The value to serve when the comparison matches. It must respect
            the setting type.
      additionalProperties: false
      example:
        comparator: isOneOf
        comparisonValue: comparisonValue
        value: {}
        comparisonAttribute: comparisonAttribute
    RolloutPercentageItemModel:
      required:
      - percentage
      - value
      type: object
      properties:
        percentage:
          type: integer
          description: The percentage value for the rule.
          format: int64
        value:
          type: object
          additionalProperties: false
          description: The value to serve when the user falls in the percentage rule.
            It must respect the setting type.
      additionalProperties: false
      example:
        percentage: 5
        value: {}
    SettingValueModel-haljson:
      type: object
      properties:
        readOnly:
          type: boolean
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdaterUserEmail:
          type: string
          nullable: true
        lastUpdaterUserFullName:
          type: string
          nullable: true
        _embedded:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded'
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          type: object
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingValueModel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ConfigModel'
        environment:
          $ref: '#/components/schemas/EnvironmentModel'
        readOnly:
          type: boolean
        setting:
          $ref: '#/components/schemas/SettingDataModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdaterUserEmail:
          type: string
          nullable: true
        lastUpdaterUserFullName:
          type: string
          nullable: true
        integrationLinks:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/IntegrationLinkModel'
        settingTags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SettingTagModel'
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          type: object
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
      additionalProperties: false
      example:
        rolloutRules:
        - comparator: isOneOf
          comparisonValue: comparisonValue
          value: {}
          comparisonAttribute: comparisonAttribute
        - comparator: isOneOf
          comparisonValue: comparisonValue
          value: {}
          comparisonAttribute: comparisonAttribute
        rolloutPercentageItems:
        - percentage: 5
          value: {}
        - percentage: 5
          value: {}
        environment:
          environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        lastUpdaterUserEmail: lastUpdaterUserEmail
        readOnly: true
        config:
          configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        integrationLinks:
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        - integrationLinkType: trello
          description: description
          key: key
          url: url
        value: {}
        settingTags:
        - color: color
          tagId: 1
          name: name
          settingTagId: 6
        - color: color
          tagId: 1
          name: name
          settingTagId: 6
        setting:
          createdAt: 2000-01-23T04:56:07.000+00:00
          ownerFullName: ownerFullName
          creatorEmail: creatorEmail
          hint: hint
          name: name
          creatorFullName: creatorFullName
          expirationWarningAt: 2000-01-23T04:56:07.000+00:00
          settingType: boolean
          key: key
          settingId: 0
          ownerEmail: ownerEmail
        updatedAt: 2000-01-23T04:56:07.000+00:00
        lastUpdaterUserFullName: lastUpdaterUserFullName
    UpdateSettingValueModel:
      type: object
      properties:
        rolloutRules:
          type: array
          description: The targeting rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutRuleModel'
        rolloutPercentageItems:
          type: array
          description: The percentage rule collection.
          nullable: true
          items:
            $ref: '#/components/schemas/RolloutPercentageItemModel'
        value:
          type: object
          additionalProperties: false
          description: The value to serve. It must respect the setting type.
          nullable: true
      additionalProperties: false
    Operation:
      type: object
      properties:
        value:
          type: object
          additionalProperties: false
          nullable: true
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
      additionalProperties: false
    TagModel-haljson:
      type: object
      properties:
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    TagModel:
      type: object
      properties:
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
      additionalProperties: false
      example:
        color: color
        tagId: 6
        name: name
    SettingModel-haljson:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
          readOnly: true
        key:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        hint:
          type: string
          nullable: true
          readOnly: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        ownerUserEmail:
          type: string
          nullable: true
          readOnly: true
        ownerUserFullName:
          type: string
          nullable: true
          readOnly: true
        expirationWarningAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        configId:
          type: string
          format: uuid
          readOnly: true
        configName:
          type: string
          nullable: true
          readOnly: true
        _embedded:
          $ref: '#/components/schemas/SettingModelhaljson__embedded'
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
          readOnly: true
        key:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        hint:
          type: string
          nullable: true
          readOnly: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        ownerUserEmail:
          type: string
          nullable: true
          readOnly: true
        ownerUserFullName:
          type: string
          nullable: true
          readOnly: true
        expirationWarningAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        configId:
          type: string
          format: uuid
          readOnly: true
        configName:
          type: string
          nullable: true
          readOnly: true
        tags:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TagModel'
      additionalProperties: false
      example:
        configName: configName
        configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hint: hint
        ownerUserFullName: ownerUserFullName
        name: name
        expirationWarningAt: 2000-01-23T04:56:07.000+00:00
        settingType: boolean
        ownerUserEmail: ownerUserEmail
        key: key
        settingId: 0
        tags:
        - color: color
          tagId: 6
          name: name
        - color: color
          tagId: 6
          name: name
    CreateSettingModel:
      required:
      - key
      - name
      - settingType
      type: object
      properties:
        key:
          maxLength: 255
          minLength: 0
          pattern: ^[a-zA-Z]+[a-zA-Z0-9_]*
          type: string
          description: The key of the setting.
        name:
          maxLength: 255
          minLength: 0
          type: string
          description: The name of the setting, shown on the Dashboard UI.
        settingType:
          $ref: '#/components/schemas/SettingType'
        hint:
          maxLength: 1000
          minLength: 0
          type: string
          description: A short description for the setting, shown on the Dashboard
            UI.
          nullable: true
        tags:
          type: array
          description: The tags attached to the setting.
          nullable: true
          items:
            $ref: '#/components/schemas/TagModel'
      additionalProperties: false
    OrganizationModel-haljson:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/OrganizationModelhaljson__links'
    OrganizationModel:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
    ProductModel-haljson:
      type: object
      properties:
        _embedded:
          $ref: '#/components/schemas/ProductModelhaljson__embedded'
        productId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/ProductModelhaljson__links'
    ProductModel:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationModel'
        productId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
      example:
        productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        organization:
          organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        name: name
    IntegrationLinkDetail:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductModel'
        config:
          $ref: '#/components/schemas/ConfigModel'
        environment:
          $ref: '#/components/schemas/EnvironmentModel'
        setting:
          $ref: '#/components/schemas/SettingDataModel'
        readOnly:
          type: boolean
        status:
          type: string
          nullable: true
      additionalProperties: false
      example:
        product:
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          organization:
            organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          name: name
        environment:
          environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        readOnly: true
        config:
          configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        setting:
          createdAt: 2000-01-23T04:56:07.000+00:00
          ownerFullName: ownerFullName
          creatorEmail: creatorEmail
          hint: hint
          name: name
          creatorFullName: creatorFullName
          expirationWarningAt: 2000-01-23T04:56:07.000+00:00
          settingType: boolean
          key: key
          settingId: 0
          ownerEmail: ownerEmail
        status: status
    IntegrationLinkDetailsModel:
      type: object
      properties:
        details:
          type: array
          nullable: true
          readOnly: true
          items:
            $ref: '#/components/schemas/IntegrationLinkDetail'
        allIntegrationLinkCount:
          type: integer
          format: int32
      additionalProperties: false
      example:
        allIntegrationLinkCount: 0
        details:
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
          environment:
            environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          readOnly: true
          config:
            configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            ownerFullName: ownerFullName
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            expirationWarningAt: 2000-01-23T04:56:07.000+00:00
            settingType: boolean
            key: key
            settingId: 0
            ownerEmail: ownerEmail
          status: status
        - product:
            productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            organization:
              organizationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
            name: name
          environment:
            environmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          readOnly: true
          config:
            configId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          setting:
            createdAt: 2000-01-23T04:56:07.000+00:00
            ownerFullName: ownerFullName
            creatorEmail: creatorEmail
            hint: hint
            name: name
            creatorFullName: creatorFullName
            expirationWarningAt: 2000-01-23T04:56:07.000+00:00
            settingType: boolean
            key: key
            settingId: 0
            ownerEmail: ownerEmail
          status: status
    AddOrUpdateIntegrationLinkModel:
      type: object
      properties:
        description:
          maxLength: 1000
          type: string
          nullable: true
        url:
          maxLength: 1000
          type: string
          nullable: true
      additionalProperties: false
    DeleteIntegrationLinkModel:
      type: object
      properties:
        hasRemainingIntegrationLink:
          type: boolean
      additionalProperties: false
      example:
        hasRemainingIntegrationLink: true
    MeModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
          readOnly: true
        fullName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      example:
        fullName: fullName
        email: email
    CreateProductRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 1000
          minLength: 0
          type: string
      additionalProperties: false
    UpdateProductRequest:
      type: object
      properties:
        name:
          maxLength: 1000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    CreateTagModel:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    UpdateTagModel:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 0
          type: string
        color:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    auditLogType:
      nullable: true
      allOf:
      - $ref: '#/components/schemas/AuditLogType'
    ConfigModelhaljson__links:
      type: object
      properties:
        self:
          type: string
        settings:
          type: string
    EnvironmentModelhaljson__links:
      type: object
      properties:
        self:
          type: string
    SettingValueModelhaljson__embedded_setting:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
          readOnly: true
        key:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
          readOnly: true
        hint:
          type: string
          nullable: true
          readOnly: true
        settingType:
          $ref: '#/components/schemas/SettingType'
        createdAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        creatorEmail:
          type: string
          nullable: true
          readOnly: true
        creatorFullName:
          type: string
          nullable: true
          readOnly: true
        ownerFullName:
          type: string
          nullable: true
        ownerEmail:
          type: string
          nullable: true
        expirationWarningAt:
          type: string
          format: date-time
          nullable: true
    SettingValueModelhaljson__embedded_config:
      type: object
      properties:
        configId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/ConfigModelhaljson__links'
    SettingValueModelhaljson__embedded_environment:
      type: object
      properties:
        environmentId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingValueModelhaljson__embedded_integrationLinks:
      type: object
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        integrationLinkType:
          $ref: '#/components/schemas/IntegrationLinkType'
        url:
          type: string
          nullable: true
    SettingValueModelhaljson__embedded_settingTags:
      type: object
      properties:
        settingTagId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
    SettingValueModelhaljson__embedded:
      type: object
      properties:
        setting:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_setting'
        config:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_config'
        environment:
          $ref: '#/components/schemas/SettingValueModelhaljson__embedded_environment'
        integrationLinks:
          type: array
          items:
            $ref: '#/components/schemas/SettingValueModelhaljson__embedded_integrationLinks'
        settingTags:
          type: array
          items:
            $ref: '#/components/schemas/SettingValueModelhaljson__embedded_settingTags'
    SettingModelhaljson__embedded_tags:
      type: object
      properties:
        tagId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/EnvironmentModelhaljson__links'
    SettingModelhaljson__embedded:
      type: object
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/SettingModelhaljson__embedded_tags'
    OrganizationModelhaljson__links:
      type: object
      properties:
        products:
          type: string
    ProductModelhaljson__embedded_organization:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/OrganizationModelhaljson__links'
    ProductModelhaljson__embedded:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/ProductModelhaljson__embedded_organization'
    ProductModelhaljson__links:
      type: object
      properties:
        self:
          type: string
        configs:
          type: string
        environments:
          type: string
        tags:
          type: string
  securitySchemes:
    Basic:
      type: http
      description: |-
        To authenticate with the API you have to fill the `Authorization` HTTP request header with your Public API credentials.

        You can create your credentials on the <a target="_blank" href="https://localhost:4200/my-account/public-api-credentials">Public API credentials management page</a>.
      scheme: basic
x-tagGroups:
- name: Feature Flag values
  tags:
  - Feature Flag & Setting values using SDK Key
  - Feature Flag & Setting values
- name: Feature Flag metadata
  tags:
  - Feature Flags & Settings
  - Tags
- name: General
  tags:
  - Organizations
  - Products
  - Configs
  - Environments
- name: Diagnostics
  tags:
  - Audit logs
  - Me
