/*
ConfigCat Public Management API

Testing FeatureFlagSettingValuesV2ApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package configcatpublicapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/configcat/configcat-publicapi-go-client"
)

func Test_configcatpublicapi_FeatureFlagSettingValuesV2ApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FeatureFlagSettingValuesV2ApiService GetSettingValueV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentId string
		var settingId int32

		resp, httpRes, err := apiClient.FeatureFlagSettingValuesV2Api.GetSettingValueV2(context.Background(), environmentId, settingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagSettingValuesV2ApiService GetSettingValuesV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var configId string
		var environmentId string

		resp, httpRes, err := apiClient.FeatureFlagSettingValuesV2Api.GetSettingValuesV2(context.Background(), configId, environmentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagSettingValuesV2ApiService PostSettingValuesV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var configId string
		var environmentId string

		resp, httpRes, err := apiClient.FeatureFlagSettingValuesV2Api.PostSettingValuesV2(context.Background(), configId, environmentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagSettingValuesV2ApiService ReplaceSettingValueV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentId string
		var settingId int32

		resp, httpRes, err := apiClient.FeatureFlagSettingValuesV2Api.ReplaceSettingValueV2(context.Background(), environmentId, settingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FeatureFlagSettingValuesV2ApiService UpdateSettingValueV2", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentId string
		var settingId int32

		resp, httpRes, err := apiClient.FeatureFlagSettingValuesV2Api.UpdateSettingValueV2(context.Background(), environmentId, settingId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
