/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format.   **Important:** Do not use this API for accessing and evaluating feature flag values. Use the [SDKs](https://configcat.com/docs/sdk-reference/overview) or the [ConfigCat Proxy](https://configcat.com/docs/advanced/proxy/proxy-overview/) instead.  # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the RolloutPercentageItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolloutPercentageItemModel{}

// RolloutPercentageItemModel struct for RolloutPercentageItemModel
type RolloutPercentageItemModel struct {
	// The percentage value for the rule.
	Percentage int64 `json:"percentage"`
	// The value to serve when the user falls in the percentage rule. It must respect the setting type.
	Value interface{} `json:"value,omitempty"`
}

// NewRolloutPercentageItemModel instantiates a new RolloutPercentageItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolloutPercentageItemModel(percentage int64) *RolloutPercentageItemModel {
	this := RolloutPercentageItemModel{}
	this.Percentage = percentage
	return &this
}

// NewRolloutPercentageItemModelWithDefaults instantiates a new RolloutPercentageItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolloutPercentageItemModelWithDefaults() *RolloutPercentageItemModel {
	this := RolloutPercentageItemModel{}
	return &this
}

// GetPercentage returns the Percentage field value
func (o *RolloutPercentageItemModel) GetPercentage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value
// and a boolean to check if the value has been set.
func (o *RolloutPercentageItemModel) GetPercentageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Percentage, true
}

// SetPercentage sets field value
func (o *RolloutPercentageItemModel) SetPercentage(v int64) {
	o.Percentage = v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RolloutPercentageItemModel) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RolloutPercentageItemModel) GetValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RolloutPercentageItemModel) HasValue() bool {
	if o != nil && IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *RolloutPercentageItemModel) SetValue(v interface{}) {
	o.Value = v
}

func (o RolloutPercentageItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolloutPercentageItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["percentage"] = o.Percentage
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRolloutPercentageItemModel struct {
	value *RolloutPercentageItemModel
	isSet bool
}

func (v NullableRolloutPercentageItemModel) Get() *RolloutPercentageItemModel {
	return v.value
}

func (v *NullableRolloutPercentageItemModel) Set(val *RolloutPercentageItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRolloutPercentageItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRolloutPercentageItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolloutPercentageItemModel(val *RolloutPercentageItemModel) *NullableRolloutPercentageItemModel {
	return &NullableRolloutPercentageItemModel{value: val, isSet: true}
}

func (v NullableRolloutPercentageItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolloutPercentageItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


