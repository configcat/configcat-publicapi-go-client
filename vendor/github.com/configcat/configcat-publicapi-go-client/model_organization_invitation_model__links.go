/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the OrganizationInvitationModelLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationInvitationModelLinks{}

// OrganizationInvitationModelLinks Links to additional related resources.
type OrganizationInvitationModelLinks struct {
	Product *ConfigModelLinksSelf `json:"product,omitempty"`
	PermissionGroup *ConfigModelLinksSelf `json:"permissionGroup,omitempty"`
}

// NewOrganizationInvitationModelLinks instantiates a new OrganizationInvitationModelLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationInvitationModelLinks() *OrganizationInvitationModelLinks {
	this := OrganizationInvitationModelLinks{}
	return &this
}

// NewOrganizationInvitationModelLinksWithDefaults instantiates a new OrganizationInvitationModelLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationInvitationModelLinksWithDefaults() *OrganizationInvitationModelLinks {
	this := OrganizationInvitationModelLinks{}
	return &this
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *OrganizationInvitationModelLinks) GetProduct() ConfigModelLinksSelf {
	if o == nil || IsNil(o.Product) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInvitationModelLinks) GetProductOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *OrganizationInvitationModelLinks) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given ConfigModelLinksSelf and assigns it to the Product field.
func (o *OrganizationInvitationModelLinks) SetProduct(v ConfigModelLinksSelf) {
	o.Product = &v
}

// GetPermissionGroup returns the PermissionGroup field value if set, zero value otherwise.
func (o *OrganizationInvitationModelLinks) GetPermissionGroup() ConfigModelLinksSelf {
	if o == nil || IsNil(o.PermissionGroup) {
		var ret ConfigModelLinksSelf
		return ret
	}
	return *o.PermissionGroup
}

// GetPermissionGroupOk returns a tuple with the PermissionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationInvitationModelLinks) GetPermissionGroupOk() (*ConfigModelLinksSelf, bool) {
	if o == nil || IsNil(o.PermissionGroup) {
		return nil, false
	}
	return o.PermissionGroup, true
}

// HasPermissionGroup returns a boolean if a field has been set.
func (o *OrganizationInvitationModelLinks) HasPermissionGroup() bool {
	if o != nil && !IsNil(o.PermissionGroup) {
		return true
	}

	return false
}

// SetPermissionGroup gets a reference to the given ConfigModelLinksSelf and assigns it to the PermissionGroup field.
func (o *OrganizationInvitationModelLinks) SetPermissionGroup(v ConfigModelLinksSelf) {
	o.PermissionGroup = &v
}

func (o OrganizationInvitationModelLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationInvitationModelLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.PermissionGroup) {
		toSerialize["permissionGroup"] = o.PermissionGroup
	}
	return toSerialize, nil
}

type NullableOrganizationInvitationModelLinks struct {
	value *OrganizationInvitationModelLinks
	isSet bool
}

func (v NullableOrganizationInvitationModelLinks) Get() *OrganizationInvitationModelLinks {
	return v.value
}

func (v *NullableOrganizationInvitationModelLinks) Set(val *OrganizationInvitationModelLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationInvitationModelLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationInvitationModelLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationInvitationModelLinks(val *OrganizationInvitationModelLinks) *NullableOrganizationInvitationModelLinks {
	return &NullableOrganizationInvitationModelLinks{value: val, isSet: true}
}

func (v NullableOrganizationInvitationModelLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationInvitationModelLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


