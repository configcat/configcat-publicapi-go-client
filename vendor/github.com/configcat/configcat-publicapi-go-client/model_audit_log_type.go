/*
ConfigCat Public Management API

The purpose of this API is to access the ConfigCat platform programmatically. You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.  **Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  format.   **Important:** Do not use this API for accessing and evaluating feature flag values. Use the [SDKs](https://configcat.com/docs/sdk-reference/overview) or the [ConfigCat Proxy](https://configcat.com/docs/advanced/proxy/proxy-overview/) instead.  # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
	"fmt"
)

// AuditLogType the model 'AuditLogType'
type AuditLogType string

// List of AuditLogType
const (
	AUDITLOGTYPE_PRODUCT_CREATED AuditLogType = "productCreated"
	AUDITLOGTYPE_PRODUCT_CHANGED AuditLogType = "productChanged"
	AUDITLOGTYPE_PRODUCT_OWNERSHIP_TRANSFERRED AuditLogType = "productOwnershipTransferred"
	AUDITLOGTYPE_PRODUCT_DELETED AuditLogType = "productDeleted"
	AUDITLOGTYPE_PRODUCTS_REORDERED AuditLogType = "productsReordered"
	AUDITLOGTYPE_TEAM_MEMBER_INVITED AuditLogType = "teamMemberInvited"
	AUDITLOGTYPE_TEAM_MEMBER_INVITATION_REVOKED AuditLogType = "teamMemberInvitationRevoked"
	AUDITLOGTYPE_TEAM_MEMBER_JOINED AuditLogType = "teamMemberJoined"
	AUDITLOGTYPE_TEAM_MEMBER_PERMISSION_GROUP_CHANGED AuditLogType = "teamMemberPermissionGroupChanged"
	AUDITLOGTYPE_TEAM_MEMBER_REMOVED AuditLogType = "teamMemberRemoved"
	AUDITLOGTYPE_TEAM_MEMBER_LEFT AuditLogType = "teamMemberLeft"
	AUDITLOGTYPE_TEAM_MEMBER_INVITATION_CHANGED AuditLogType = "teamMemberInvitationChanged"
	AUDITLOGTYPE_TEAM_MEMBER_INVITATION_RESENT AuditLogType = "teamMemberInvitationResent"
	AUDITLOGTYPE_TEAM_MEMBER_INVITATION_REJECTED AuditLogType = "teamMemberInvitationRejected"
	AUDITLOGTYPE_CONFIG_CREATED AuditLogType = "configCreated"
	AUDITLOGTYPE_CONFIG_CHANGED AuditLogType = "configChanged"
	AUDITLOGTYPE_CONFIG_DELETED AuditLogType = "configDeleted"
	AUDITLOGTYPE_CONFIGS_REORDERED AuditLogType = "configsReordered"
	AUDITLOGTYPE_ENVIRONMENT_CREATED AuditLogType = "environmentCreated"
	AUDITLOGTYPE_ENVIRONMENT_CHANGED AuditLogType = "environmentChanged"
	AUDITLOGTYPE_ENVIRONMENT_DELETED AuditLogType = "environmentDeleted"
	AUDITLOGTYPE_ENVIRONMENTS_REORDERED AuditLogType = "environmentsReordered"
	AUDITLOGTYPE_SETTING_CREATED AuditLogType = "settingCreated"
	AUDITLOGTYPE_SETTING_CHANGED AuditLogType = "settingChanged"
	AUDITLOGTYPE_SETTING_DELETED AuditLogType = "settingDeleted"
	AUDITLOGTYPE_SETTINGS_REORDERED AuditLogType = "settingsReordered"
	AUDITLOGTYPE_SETTING_VALUE_CHANGED AuditLogType = "settingValueChanged"
	AUDITLOGTYPE_WEB_HOOK_CREATED AuditLogType = "webHookCreated"
	AUDITLOGTYPE_WEB_HOOK_CHANGED AuditLogType = "webHookChanged"
	AUDITLOGTYPE_WEB_HOOK_DELETED AuditLogType = "webHookDeleted"
	AUDITLOGTYPE_PERMISSION_GROUP_CREATED AuditLogType = "permissionGroupCreated"
	AUDITLOGTYPE_PERMISSION_GROUP_CHANGED AuditLogType = "permissionGroupChanged"
	AUDITLOGTYPE_PERMISSION_GROUP_DELETED AuditLogType = "permissionGroupDeleted"
	AUDITLOGTYPE_PERMISSION_GROUP_DEFAULT AuditLogType = "permissionGroupDefault"
	AUDITLOGTYPE_API_KEY_ADDED AuditLogType = "apiKeyAdded"
	AUDITLOGTYPE_API_KEY_REMOVED AuditLogType = "apiKeyRemoved"
	AUDITLOGTYPE_INTEGRATION_ADDED AuditLogType = "integrationAdded"
	AUDITLOGTYPE_INTEGRATION_CHANGED AuditLogType = "integrationChanged"
	AUDITLOGTYPE_INTEGRATION_REMOVED AuditLogType = "integrationRemoved"
	AUDITLOGTYPE_API_KEY_CONNECTED AuditLogType = "apiKeyConnected"
	AUDITLOGTYPE_INTEGRATION_LINK_ADDED AuditLogType = "integrationLinkAdded"
	AUDITLOGTYPE_INTEGRATION_LINK_REMOVED AuditLogType = "integrationLinkRemoved"
	AUDITLOGTYPE_ORGANIZATION_ADDED AuditLogType = "organizationAdded"
	AUDITLOGTYPE_ORGANIZATION_REMOVED AuditLogType = "organizationRemoved"
	AUDITLOGTYPE_ORGANIZATION_CHANGED AuditLogType = "organizationChanged"
	AUDITLOGTYPE_ORGANIZATION_SUBSCRIPTION_TYPE_CHANGED AuditLogType = "organizationSubscriptionTypeChanged"
	AUDITLOGTYPE_ORGANIZATION_ADMIN_CHANGED AuditLogType = "organizationAdminChanged"
	AUDITLOGTYPE_ORGANIZATION_ADMIN_LEFT AuditLogType = "organizationAdminLeft"
	AUDITLOGTYPE_ORGANIZATION_ADMIN_DISABLED2_FA AuditLogType = "organizationAdminDisabled2FA"
	AUDITLOGTYPE_TAG_ADDED AuditLogType = "tagAdded"
	AUDITLOGTYPE_TAG_CHANGED AuditLogType = "tagChanged"
	AUDITLOGTYPE_TAG_REMOVED AuditLogType = "tagRemoved"
	AUDITLOGTYPE_SETTING_TAG_ADDED AuditLogType = "settingTagAdded"
	AUDITLOGTYPE_SETTING_TAG_REMOVED AuditLogType = "settingTagRemoved"
	AUDITLOGTYPE_PUBLIC_API_ACCESS_TOKEN_ADDED AuditLogType = "publicApiAccessTokenAdded"
	AUDITLOGTYPE_PUBLIC_API_ACCESS_TOKEN_REMOVED AuditLogType = "publicApiAccessTokenRemoved"
	AUDITLOGTYPE_DOMAIN_ADDED AuditLogType = "domainAdded"
	AUDITLOGTYPE_DOMAIN_VERIFIED AuditLogType = "domainVerified"
	AUDITLOGTYPE_DOMAIN_REMOVED AuditLogType = "domainRemoved"
	AUDITLOGTYPE_DOMAIN_SAML_CONFIGURED AuditLogType = "domainSamlConfigured"
	AUDITLOGTYPE_DOMAIN_SAML_DELETED AuditLogType = "domainSamlDeleted"
	AUDITLOGTYPE_AUTO_PROVISIONING_CONFIGURATION_CHANGED AuditLogType = "autoProvisioningConfigurationChanged"
	AUDITLOGTYPE_SAML_IDP_CONFIGURATION_ADDED AuditLogType = "samlIdpConfigurationAdded"
	AUDITLOGTYPE_SAML_IDP_CONFIGURATION_REMOVED AuditLogType = "samlIdpConfigurationRemoved"
	AUDITLOGTYPE_SAML_IDP_CONFIGURATION_UPDATED AuditLogType = "samlIdpConfigurationUpdated"
	AUDITLOGTYPE_ORGANIZATION_MEMBER_JOINED AuditLogType = "organizationMemberJoined"
	AUDITLOGTYPE_ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUESTED AuditLogType = "organizationMemberProductJoinRequested"
	AUDITLOGTYPE_ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUEST_REJECTED AuditLogType = "organizationMemberProductJoinRequestRejected"
	AUDITLOGTYPE_ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUEST_APPROVED AuditLogType = "organizationMemberProductJoinRequestApproved"
	AUDITLOGTYPE_CODE_REFERENCES_UPLOADED AuditLogType = "codeReferencesUploaded"
	AUDITLOGTYPE_CODE_REFERENCE_DELETED AuditLogType = "codeReferenceDeleted"
	AUDITLOGTYPE_CODE_REFERENCE_STALE_BRANCH_DELETED AuditLogType = "codeReferenceStaleBranchDeleted"
	AUDITLOGTYPE_SEGMENT_CREATED AuditLogType = "segmentCreated"
	AUDITLOGTYPE_SEGMENT_CHANGED AuditLogType = "segmentChanged"
	AUDITLOGTYPE_SEGMENT_DELETED AuditLogType = "segmentDeleted"
	AUDITLOGTYPE_WEBHOOK_SIGNING_KEY_DELETED AuditLogType = "webhookSigningKeyDeleted"
	AUDITLOGTYPE_WEBHOOK_SIGNING_KEY_CREATED AuditLogType = "webhookSigningKeyCreated"
)

// All allowed values of AuditLogType enum
var AllowedAuditLogTypeEnumValues = []AuditLogType{
	"productCreated",
	"productChanged",
	"productOwnershipTransferred",
	"productDeleted",
	"productsReordered",
	"teamMemberInvited",
	"teamMemberInvitationRevoked",
	"teamMemberJoined",
	"teamMemberPermissionGroupChanged",
	"teamMemberRemoved",
	"teamMemberLeft",
	"teamMemberInvitationChanged",
	"teamMemberInvitationResent",
	"teamMemberInvitationRejected",
	"configCreated",
	"configChanged",
	"configDeleted",
	"configsReordered",
	"environmentCreated",
	"environmentChanged",
	"environmentDeleted",
	"environmentsReordered",
	"settingCreated",
	"settingChanged",
	"settingDeleted",
	"settingsReordered",
	"settingValueChanged",
	"webHookCreated",
	"webHookChanged",
	"webHookDeleted",
	"permissionGroupCreated",
	"permissionGroupChanged",
	"permissionGroupDeleted",
	"permissionGroupDefault",
	"apiKeyAdded",
	"apiKeyRemoved",
	"integrationAdded",
	"integrationChanged",
	"integrationRemoved",
	"apiKeyConnected",
	"integrationLinkAdded",
	"integrationLinkRemoved",
	"organizationAdded",
	"organizationRemoved",
	"organizationChanged",
	"organizationSubscriptionTypeChanged",
	"organizationAdminChanged",
	"organizationAdminLeft",
	"organizationAdminDisabled2FA",
	"tagAdded",
	"tagChanged",
	"tagRemoved",
	"settingTagAdded",
	"settingTagRemoved",
	"publicApiAccessTokenAdded",
	"publicApiAccessTokenRemoved",
	"domainAdded",
	"domainVerified",
	"domainRemoved",
	"domainSamlConfigured",
	"domainSamlDeleted",
	"autoProvisioningConfigurationChanged",
	"samlIdpConfigurationAdded",
	"samlIdpConfigurationRemoved",
	"samlIdpConfigurationUpdated",
	"organizationMemberJoined",
	"organizationMemberProductJoinRequested",
	"organizationMemberProductJoinRequestRejected",
	"organizationMemberProductJoinRequestApproved",
	"codeReferencesUploaded",
	"codeReferenceDeleted",
	"codeReferenceStaleBranchDeleted",
	"segmentCreated",
	"segmentChanged",
	"segmentDeleted",
	"webhookSigningKeyDeleted",
	"webhookSigningKeyCreated",
}

func (v *AuditLogType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AuditLogType(value)
	for _, existing := range AllowedAuditLogTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AuditLogType", value)
}

// NewAuditLogTypeFromValue returns a pointer to a valid AuditLogType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuditLogTypeFromValue(v string) (*AuditLogType, error) {
	ev := AuditLogType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AuditLogType: valid values are %v", v, AllowedAuditLogTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuditLogType) IsValid() bool {
	for _, existing := range AllowedAuditLogTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AuditLogType value
func (v AuditLogType) Ptr() *AuditLogType {
	return &v
}

type NullableAuditLogType struct {
	value *AuditLogType
	isSet bool
}

func (v NullableAuditLogType) Get() *AuditLogType {
	return v.value
}

func (v *NullableAuditLogType) Set(val *AuditLogType) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogType) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogType(val *AuditLogType) *NullableAuditLogType {
	return &NullableAuditLogType{value: val, isSet: true}
}

func (v NullableAuditLogType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

