/*
ConfigCat Public Management API

**Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available in the following formats:  - [OpenAPI v3](https://test-api.configcat.com/docs/v1/swagger.json) - [Swagger v2](https://test-api.configcat.com/docs/v1/swagger.v2.json)  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
)

// checks if the ComparisonValueListModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComparisonValueListModel{}

// ComparisonValueListModel struct for ComparisonValueListModel
type ComparisonValueListModel struct {
	// The actual comparison value.
	Value string `json:"value"`
	// An optional hint for the comparison value.
	Hint NullableString `json:"hint,omitempty"`
}

// NewComparisonValueListModel instantiates a new ComparisonValueListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComparisonValueListModel(value string) *ComparisonValueListModel {
	this := ComparisonValueListModel{}
	this.Value = value
	return &this
}

// NewComparisonValueListModelWithDefaults instantiates a new ComparisonValueListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComparisonValueListModelWithDefaults() *ComparisonValueListModel {
	this := ComparisonValueListModel{}
	return &this
}

// GetValue returns the Value field value
func (o *ComparisonValueListModel) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ComparisonValueListModel) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ComparisonValueListModel) SetValue(v string) {
	o.Value = v
}

// GetHint returns the Hint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparisonValueListModel) GetHint() string {
	if o == nil || IsNil(o.Hint.Get()) {
		var ret string
		return ret
	}
	return *o.Hint.Get()
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparisonValueListModel) GetHintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hint.Get(), o.Hint.IsSet()
}

// HasHint returns a boolean if a field has been set.
func (o *ComparisonValueListModel) HasHint() bool {
	if o != nil && o.Hint.IsSet() {
		return true
	}

	return false
}

// SetHint gets a reference to the given NullableString and assigns it to the Hint field.
func (o *ComparisonValueListModel) SetHint(v string) {
	o.Hint.Set(&v)
}
// SetHintNil sets the value for Hint to be an explicit nil
func (o *ComparisonValueListModel) SetHintNil() {
	o.Hint.Set(nil)
}

// UnsetHint ensures that no value is present for Hint, not even an explicit nil
func (o *ComparisonValueListModel) UnsetHint() {
	o.Hint.Unset()
}

func (o ComparisonValueListModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComparisonValueListModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	if o.Hint.IsSet() {
		toSerialize["hint"] = o.Hint.Get()
	}
	return toSerialize, nil
}

type NullableComparisonValueListModel struct {
	value *ComparisonValueListModel
	isSet bool
}

func (v NullableComparisonValueListModel) Get() *ComparisonValueListModel {
	return v.value
}

func (v *NullableComparisonValueListModel) Set(val *ComparisonValueListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableComparisonValueListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableComparisonValueListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComparisonValueListModel(val *ComparisonValueListModel) *NullableComparisonValueListModel {
	return &NullableComparisonValueListModel{value: val, isSet: true}
}

func (v NullableComparisonValueListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComparisonValueListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


