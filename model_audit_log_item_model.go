/*
ConfigCat Public Management API

**Base API URL**: https://test-api.configcat.com  If you prefer the swagger documentation, you can find it here: [Swagger UI](https://test-api.configcat.com/swagger).  The purpose of this API is to access the ConfigCat platform programmatically.  You can **Create**, **Read**, **Update** and **Delete** any entities like **Feature Flags, Configs, Environments** or **Products** within ConfigCat.   The API is based on HTTP REST, uses resource-oriented URLs, status codes and supports JSON  and JSON+HAL format. Do not use this API for accessing and evaluating feature flag values. Use the [SDKs instead](https://configcat.com/docs/sdk-reference/overview).   # OpenAPI Specification  The complete specification is publicly available here: [swagger.json](v1/swagger.json).  You can use it to generate client libraries in various languages with [OpenAPI Generator](https://github.com/OpenAPITools/openapi-generator) or [Swagger Codegen](https://swagger.io/tools/swagger-codegen/) to interact with this API.  # Authentication This API uses the [Basic HTTP Authentication Scheme](https://en.wikipedia.org/wiki/Basic_access_authentication).   <!-- ReDoc-Inject: <security-definitions> -->  # Throttling and rate limits All the rate limited API calls are returning information about the current rate limit period in the following HTTP headers:  | Header | Description | | :- | :- | | X-Rate-Limit-Remaining | The maximum number of requests remaining in the current rate limit period. | | X-Rate-Limit-Reset     | The time when the current rate limit period resets.        |  When the rate limit is exceeded by a request, the API returns with a `HTTP 429 - Too many requests` status along with a `Retry-After` HTTP header. 

API version: v1
Contact: support@configcat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configcatpublicapi

import (
	"encoding/json"
	"time"
)

// checks if the AuditLogItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogItemModel{}

// AuditLogItemModel struct for AuditLogItemModel
type AuditLogItemModel struct {
	AuditLogId *int64 `json:"auditLogId,omitempty"`
	AuditLogDateTime *time.Time `json:"auditLogDateTime,omitempty"`
	AuditLogTypeEnum *AuditLogType `json:"auditLogTypeEnum,omitempty"`
	AuditLogType NullableString `json:"auditLogType,omitempty"`
	UserEmail NullableString `json:"userEmail,omitempty"`
	UserName NullableString `json:"userName,omitempty"`
	Where NullableString `json:"where,omitempty"`
	Why NullableString `json:"why,omitempty"`
	ActionTarget NullableString `json:"actionTarget,omitempty"`
	Details NullableString `json:"details,omitempty"`
}

// NewAuditLogItemModel instantiates a new AuditLogItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogItemModel() *AuditLogItemModel {
	this := AuditLogItemModel{}
	return &this
}

// NewAuditLogItemModelWithDefaults instantiates a new AuditLogItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogItemModelWithDefaults() *AuditLogItemModel {
	this := AuditLogItemModel{}
	return &this
}

// GetAuditLogId returns the AuditLogId field value if set, zero value otherwise.
func (o *AuditLogItemModel) GetAuditLogId() int64 {
	if o == nil || IsNil(o.AuditLogId) {
		var ret int64
		return ret
	}
	return *o.AuditLogId
}

// GetAuditLogIdOk returns a tuple with the AuditLogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogItemModel) GetAuditLogIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AuditLogId) {
		return nil, false
	}
	return o.AuditLogId, true
}

// HasAuditLogId returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasAuditLogId() bool {
	if o != nil && !IsNil(o.AuditLogId) {
		return true
	}

	return false
}

// SetAuditLogId gets a reference to the given int64 and assigns it to the AuditLogId field.
func (o *AuditLogItemModel) SetAuditLogId(v int64) {
	o.AuditLogId = &v
}

// GetAuditLogDateTime returns the AuditLogDateTime field value if set, zero value otherwise.
func (o *AuditLogItemModel) GetAuditLogDateTime() time.Time {
	if o == nil || IsNil(o.AuditLogDateTime) {
		var ret time.Time
		return ret
	}
	return *o.AuditLogDateTime
}

// GetAuditLogDateTimeOk returns a tuple with the AuditLogDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogItemModel) GetAuditLogDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AuditLogDateTime) {
		return nil, false
	}
	return o.AuditLogDateTime, true
}

// HasAuditLogDateTime returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasAuditLogDateTime() bool {
	if o != nil && !IsNil(o.AuditLogDateTime) {
		return true
	}

	return false
}

// SetAuditLogDateTime gets a reference to the given time.Time and assigns it to the AuditLogDateTime field.
func (o *AuditLogItemModel) SetAuditLogDateTime(v time.Time) {
	o.AuditLogDateTime = &v
}

// GetAuditLogTypeEnum returns the AuditLogTypeEnum field value if set, zero value otherwise.
func (o *AuditLogItemModel) GetAuditLogTypeEnum() AuditLogType {
	if o == nil || IsNil(o.AuditLogTypeEnum) {
		var ret AuditLogType
		return ret
	}
	return *o.AuditLogTypeEnum
}

// GetAuditLogTypeEnumOk returns a tuple with the AuditLogTypeEnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogItemModel) GetAuditLogTypeEnumOk() (*AuditLogType, bool) {
	if o == nil || IsNil(o.AuditLogTypeEnum) {
		return nil, false
	}
	return o.AuditLogTypeEnum, true
}

// HasAuditLogTypeEnum returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasAuditLogTypeEnum() bool {
	if o != nil && !IsNil(o.AuditLogTypeEnum) {
		return true
	}

	return false
}

// SetAuditLogTypeEnum gets a reference to the given AuditLogType and assigns it to the AuditLogTypeEnum field.
func (o *AuditLogItemModel) SetAuditLogTypeEnum(v AuditLogType) {
	o.AuditLogTypeEnum = &v
}

// GetAuditLogType returns the AuditLogType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetAuditLogType() string {
	if o == nil || IsNil(o.AuditLogType.Get()) {
		var ret string
		return ret
	}
	return *o.AuditLogType.Get()
}

// GetAuditLogTypeOk returns a tuple with the AuditLogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetAuditLogTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuditLogType.Get(), o.AuditLogType.IsSet()
}

// HasAuditLogType returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasAuditLogType() bool {
	if o != nil && o.AuditLogType.IsSet() {
		return true
	}

	return false
}

// SetAuditLogType gets a reference to the given NullableString and assigns it to the AuditLogType field.
func (o *AuditLogItemModel) SetAuditLogType(v string) {
	o.AuditLogType.Set(&v)
}
// SetAuditLogTypeNil sets the value for AuditLogType to be an explicit nil
func (o *AuditLogItemModel) SetAuditLogTypeNil() {
	o.AuditLogType.Set(nil)
}

// UnsetAuditLogType ensures that no value is present for AuditLogType, not even an explicit nil
func (o *AuditLogItemModel) UnsetAuditLogType() {
	o.AuditLogType.Unset()
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail.Get()) {
		var ret string
		return ret
	}
	return *o.UserEmail.Get()
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserEmail.Get(), o.UserEmail.IsSet()
}

// HasUserEmail returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasUserEmail() bool {
	if o != nil && o.UserEmail.IsSet() {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given NullableString and assigns it to the UserEmail field.
func (o *AuditLogItemModel) SetUserEmail(v string) {
	o.UserEmail.Set(&v)
}
// SetUserEmailNil sets the value for UserEmail to be an explicit nil
func (o *AuditLogItemModel) SetUserEmailNil() {
	o.UserEmail.Set(nil)
}

// UnsetUserEmail ensures that no value is present for UserEmail, not even an explicit nil
func (o *AuditLogItemModel) UnsetUserEmail() {
	o.UserEmail.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetUserName() string {
	if o == nil || IsNil(o.UserName.Get()) {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *AuditLogItemModel) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *AuditLogItemModel) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *AuditLogItemModel) UnsetUserName() {
	o.UserName.Unset()
}

// GetWhere returns the Where field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetWhere() string {
	if o == nil || IsNil(o.Where.Get()) {
		var ret string
		return ret
	}
	return *o.Where.Get()
}

// GetWhereOk returns a tuple with the Where field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetWhereOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Where.Get(), o.Where.IsSet()
}

// HasWhere returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasWhere() bool {
	if o != nil && o.Where.IsSet() {
		return true
	}

	return false
}

// SetWhere gets a reference to the given NullableString and assigns it to the Where field.
func (o *AuditLogItemModel) SetWhere(v string) {
	o.Where.Set(&v)
}
// SetWhereNil sets the value for Where to be an explicit nil
func (o *AuditLogItemModel) SetWhereNil() {
	o.Where.Set(nil)
}

// UnsetWhere ensures that no value is present for Where, not even an explicit nil
func (o *AuditLogItemModel) UnsetWhere() {
	o.Where.Unset()
}

// GetWhy returns the Why field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetWhy() string {
	if o == nil || IsNil(o.Why.Get()) {
		var ret string
		return ret
	}
	return *o.Why.Get()
}

// GetWhyOk returns a tuple with the Why field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetWhyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Why.Get(), o.Why.IsSet()
}

// HasWhy returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasWhy() bool {
	if o != nil && o.Why.IsSet() {
		return true
	}

	return false
}

// SetWhy gets a reference to the given NullableString and assigns it to the Why field.
func (o *AuditLogItemModel) SetWhy(v string) {
	o.Why.Set(&v)
}
// SetWhyNil sets the value for Why to be an explicit nil
func (o *AuditLogItemModel) SetWhyNil() {
	o.Why.Set(nil)
}

// UnsetWhy ensures that no value is present for Why, not even an explicit nil
func (o *AuditLogItemModel) UnsetWhy() {
	o.Why.Unset()
}

// GetActionTarget returns the ActionTarget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetActionTarget() string {
	if o == nil || IsNil(o.ActionTarget.Get()) {
		var ret string
		return ret
	}
	return *o.ActionTarget.Get()
}

// GetActionTargetOk returns a tuple with the ActionTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetActionTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionTarget.Get(), o.ActionTarget.IsSet()
}

// HasActionTarget returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasActionTarget() bool {
	if o != nil && o.ActionTarget.IsSet() {
		return true
	}

	return false
}

// SetActionTarget gets a reference to the given NullableString and assigns it to the ActionTarget field.
func (o *AuditLogItemModel) SetActionTarget(v string) {
	o.ActionTarget.Set(&v)
}
// SetActionTargetNil sets the value for ActionTarget to be an explicit nil
func (o *AuditLogItemModel) SetActionTargetNil() {
	o.ActionTarget.Set(nil)
}

// UnsetActionTarget ensures that no value is present for ActionTarget, not even an explicit nil
func (o *AuditLogItemModel) UnsetActionTarget() {
	o.ActionTarget.Unset()
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogItemModel) GetDetails() string {
	if o == nil || IsNil(o.Details.Get()) {
		var ret string
		return ret
	}
	return *o.Details.Get()
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogItemModel) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Details.Get(), o.Details.IsSet()
}

// HasDetails returns a boolean if a field has been set.
func (o *AuditLogItemModel) HasDetails() bool {
	if o != nil && o.Details.IsSet() {
		return true
	}

	return false
}

// SetDetails gets a reference to the given NullableString and assigns it to the Details field.
func (o *AuditLogItemModel) SetDetails(v string) {
	o.Details.Set(&v)
}
// SetDetailsNil sets the value for Details to be an explicit nil
func (o *AuditLogItemModel) SetDetailsNil() {
	o.Details.Set(nil)
}

// UnsetDetails ensures that no value is present for Details, not even an explicit nil
func (o *AuditLogItemModel) UnsetDetails() {
	o.Details.Unset()
}

func (o AuditLogItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuditLogId) {
		toSerialize["auditLogId"] = o.AuditLogId
	}
	if !IsNil(o.AuditLogDateTime) {
		toSerialize["auditLogDateTime"] = o.AuditLogDateTime
	}
	if !IsNil(o.AuditLogTypeEnum) {
		toSerialize["auditLogTypeEnum"] = o.AuditLogTypeEnum
	}
	if o.AuditLogType.IsSet() {
		toSerialize["auditLogType"] = o.AuditLogType.Get()
	}
	if o.UserEmail.IsSet() {
		toSerialize["userEmail"] = o.UserEmail.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	if o.Where.IsSet() {
		toSerialize["where"] = o.Where.Get()
	}
	if o.Why.IsSet() {
		toSerialize["why"] = o.Why.Get()
	}
	if o.ActionTarget.IsSet() {
		toSerialize["actionTarget"] = o.ActionTarget.Get()
	}
	if o.Details.IsSet() {
		toSerialize["details"] = o.Details.Get()
	}
	return toSerialize, nil
}

type NullableAuditLogItemModel struct {
	value *AuditLogItemModel
	isSet bool
}

func (v NullableAuditLogItemModel) Get() *AuditLogItemModel {
	return v.value
}

func (v *NullableAuditLogItemModel) Set(val *AuditLogItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogItemModel(val *AuditLogItemModel) *NullableAuditLogItemModel {
	return &NullableAuditLogItemModel{value: val, isSet: true}
}

func (v NullableAuditLogItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


